

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Jul 27 17:13:55 2015

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F688
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 4 "Board/BoardV4.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 4 "Board/BoardV4.c"
    45  2007  00C2               	dw 0x00C2 ;#
    46                           	FNCALL	_main,_Init
    47                           	FNCALL	_main,_setup
    48                           	FNCALL	_main,_serialCom
    49                           	FNCALL	_main,_GetTimesHeartBeat
    50                           	FNCALL	_main,_SetSendingPWM
    51                           	FNCALL	_serialCom,_SerialAvailable
    52                           	FNCALL	_serialCom,_SerialRead
    53                           	FNCALL	_serialCom,_evaluateCommand
    54                           	FNCALL	_setup,_SetUSART
    55                           	FNCALL	_setup,_SetUSARTReceiverEnabled
    56                           	FNCALL	_setup,_SendLine
    57                           	FNCALL	_setup,_SetSendingPWM
    58                           	FNCALL	_setup,_GetTimesHeartBeat
    59                           	FNCALL	_setup,_delay
    60                           	FNCALL	_evaluateCommand,_read8
    61                           	FNCALL	_SendLine,_SendString
    62                           	FNROOT	_main
    63                           	FNCALL	_Interrupt,_SetUSARTReceiverDisabled
    64                           	FNCALL	_Interrupt,i1_SetUSARTReceiverEnabled
    65                           	FNCALL	intlevel1,_Interrupt
    66                           	global	intlevel1
    67                           	FNROOT	intlevel1
    68                           	global	_serialBufferRX
    69                           	global	_nServo
    70                           	global	_nContTimesKey
    71                           	global	_nPWM
    72                           	global	_nSendingPWM
    73                           	global	_cStatePWM0
    74                           	global	_cTimesHeartBeat
    75                           	global	_checksum
    76                           	global	_cmdMSP
    77                           	global	_indRX
    78                           	global	serialCom@dataSize
    79                           	global	serialCom@offset
    80                           	global	serialCom@state
    81                           	global	_cHeartBeat
    82                           	global	_cOldHeartBeat
    83                           	global	_nPoint
    84                           	global	_serialHeadRX
    85                           	global	_serialTailRX
    86                           	global	_inBuf
    87                           	global	_ADCON0
    88                           psect	text667,local,class=CODE,delta=2
    89                           global __ptext667
    90  0000                     __ptext667:
    91  001F                     _ADCON0	set	31
    92                           	global	_ADRESH
    93  001E                     _ADRESH	set	30
    94                           	global	_CMCON0
    95  0019                     _CMCON0	set	25
    96                           	global	_INTCON
    97  000B                     _INTCON	set	11
    98                           	global	_PORTA
    99  0005                     _PORTA	set	5
   100                           	global	_PORTC
   101  0007                     _PORTC	set	7
   102                           	global	_RCREG
   103  0014                     _RCREG	set	20
   104                           	global	_SPBRG
   105  0013                     _SPBRG	set	19
   106                           	global	_T1CON
   107  0010                     _T1CON	set	16
   108                           	global	_TMR1H
   109  000F                     _TMR1H	set	15
   110                           	global	_TMR1L
   111  000E                     _TMR1L	set	14
   112                           	global	_TXREG
   113  0015                     _TXREG	set	21
   114                           	global	_ADFM
   115  00FF                     _ADFM	set	255
   116                           	global	_ADON
   117  00F8                     _ADON	set	248
   118                           	global	_BRGH
   119  00B2                     _BRGH	set	178
   120                           	global	_CARRY
   121  0018                     _CARRY	set	24
   122                           	global	_CHS0
   123  00FA                     _CHS0	set	250
   124                           	global	_CHS1
   125  00FB                     _CHS1	set	251
   126                           	global	_CHS2
   127  00FC                     _CHS2	set	252
   128                           	global	_CREN
   129  00BC                     _CREN	set	188
   130                           	global	_GIE
   131  005F                     _GIE	set	95
   132                           	global	_PEIE
   133  005E                     _PEIE	set	94
   134                           	global	_RA0
   135  0028                     _RA0	set	40
   136                           	global	_RA1
   137  0029                     _RA1	set	41
   138                           	global	_RA2
   139  002A                     _RA2	set	42
   140                           	global	_RC0
   141  0038                     _RC0	set	56
   142                           	global	_RC1
   143  0039                     _RC1	set	57
   144                           	global	_RC2
   145  003A                     _RC2	set	58
   146                           	global	_RC3
   147  003B                     _RC3	set	59
   148                           	global	_RCIF
   149  0065                     _RCIF	set	101
   150                           	global	_SPEN
   151  00BF                     _SPEN	set	191
   152                           	global	_SYNC
   153  00B4                     _SYNC	set	180
   154                           	global	_TMR1IF
   155  0060                     _TMR1IF	set	96
   156                           	global	_TMR1ON
   157  0080                     _TMR1ON	set	128
   158                           	global	_TRMT
   159  00B1                     _TRMT	set	177
   160                           	global	_TXEN
   161  00B5                     _TXEN	set	181
   162                           	global	_ADRESL
   163  009E                     _ADRESL	set	158
   164                           	global	_ANSEL
   165  0091                     _ANSEL	set	145
   166                           	global	_EEADR
   167  009B                     _EEADR	set	155
   168                           	global	_EECON1
   169  009C                     _EECON1	set	156
   170                           	global	_EECON2
   171  009D                     _EECON2	set	157
   172                           	global	_EEDATA
   173  009A                     _EEDATA	set	154
   174                           	global	_PIE1
   175  008C                     _PIE1	set	140
   176                           	global	_TRISA
   177  0085                     _TRISA	set	133
   178                           	global	_TRISC
   179  0087                     _TRISC	set	135
   180                           	global	_WPUA
   181  0095                     _WPUA	set	149
   182                           	global	_ADCS0
   183  04FC                     _ADCS0	set	1276
   184                           	global	_ADCS1
   185  04FD                     _ADCS1	set	1277
   186                           	global	_ADCS2
   187  04FE                     _ADCS2	set	1278
   188                           	global	_RCIE
   189  0465                     _RCIE	set	1125
   190                           	global	_RD
   191  04E0                     _RD	set	1248
   192                           	global	_TMR1IE
   193  0460                     _TMR1IE	set	1120
   194                           	global	_TRISA0
   195  0428                     _TRISA0	set	1064
   196                           	global	_TRISA1
   197  0429                     _TRISA1	set	1065
   198                           	global	_TRISA2
   199  042A                     _TRISA2	set	1066
   200                           	global	_TRISC0
   201  0438                     _TRISC0	set	1080
   202                           	global	_TRISC1
   203  0439                     _TRISC1	set	1081
   204                           	global	_TRISC2
   205  043A                     _TRISC2	set	1082
   206                           	global	_TRISC3
   207  043B                     _TRISC3	set	1083
   208                           	global	_TRISC4
   209  043C                     _TRISC4	set	1084
   210                           	global	_TRISC5
   211  043D                     _TRISC5	set	1085
   212                           	global	_WR
   213  04E1                     _WR	set	1249
   214                           	global	_WREN
   215  04E2                     _WREN	set	1250
   216                           	global	_nRAPU
   217  040F                     _nRAPU	set	1039
   218                           psect	strings,class=STRING,delta=2
   219                           global __pstrings
   220  0406                     __pstrings:
   221                           ;	global	stringdir,stringtab,__stringbase
   222  0406                     stringtab:
   223                           ;	String table - string pointers are 1 byte each
   224  0406  1BFF               	btfsc	(btemp+1),7
   225  0407  2C10               	ljmp	stringcode
   226  0408  1383               	bcf	status,7
   227  0409  187F               	btfsc	(btemp+1),0
   228  040A  1783               	bsf	status,7
   229  040B  0800               	movf	indf,w
   230  040C  0A84               	incf fsr
   231  040D  1903               skipnz
   232  040E  0AFF               incf btemp+1
   233  040F  0008               	return
   234  0410                     stringcode:stringdir:
      + 0410                     stringdir:	
   235  0410  3004               movlw high(stringdir)
   236  0411  008A               movwf pclath
   237  0412  0804               movf fsr,w
   238  0413  0A84               incf fsr
   239  0414  0782               	addwf pc
   240  0415                     __stringbase:
   241  0415  3400               	retlw	0
   242                           psect	strings
   243                           	
   244  0416                     STR_1:	
   245  0416  3455               	retlw	85	;'U'
   246  0417  3453               	retlw	83	;'S'
   247  0418  3441               	retlw	65	;'A'
   248  0419  3452               	retlw	82	;'R'
   249  041A  3454               	retlw	84	;'T'
   250  041B  3420               	retlw	32	;' '
   251  041C  3449               	retlw	73	;'I'
   252  041D  346E               	retlw	110	;'n'
   253  041E  3469               	retlw	105	;'i'
   254  041F  3474               	retlw	116	;'t'
   255  0420  342E               	retlw	46	;'.'
   256  0421  3400               	retlw	0
   257                           psect	strings
   258                           	file	"C:\Users\thinkpad\AppData\Local\Temp\s6r0."
   259                           	line	#
   260                           psect cinit,class=CODE,delta=2
   261                           global start_initialization
   262  0438                     start_initialization:
   263                           
   264                           psect	bssCOMMON,class=COMMON,space=1
   265                           global __pbssCOMMON
   266  0070                     __pbssCOMMON:
   267  0070                     _cHeartBeat:
   268  0070                            ds      1
   269                           
   270  0071                     _cOldHeartBeat:
   271  0071                            ds      1
   272                           
   273  0072                     _nPoint:
   274  0072                            ds      1
   275                           
   276  0073                     _serialHeadRX:
   277  0073                            ds      1
   278                           
   279  0074                     _serialTailRX:
   280  0074                            ds      1
   281                           
   282                           psect	bssBANK0,class=BANK0,space=1
   283                           global __pbssBANK0
   284  0020                     __pbssBANK0:
   285  0020                     _serialBufferRX:
   286  0020                            ds      32
   287                           
   288  0040                     _nServo:
   289  0040                            ds      6
   290                           
   291  0046                     _nContTimesKey:
   292  0046                            ds      4
   293                           
   294  004A                     _nPWM:
   295  004A                            ds      4
   296                           
   297  004E                     _nSendingPWM:
   298  004E                            ds      4
   299                           
   300  0052                     _cStatePWM0:
   301  0052                            ds      1
   302                           
   303  0053                     _cTimesHeartBeat:
   304  0053                            ds      1
   305                           
   306  0054                     _checksum:
   307  0054                            ds      1
   308                           
   309  0055                     _cmdMSP:
   310  0055                            ds      1
   311                           
   312  0056                     _indRX:
   313  0056                            ds      1
   314                           
   315  0057                     serialCom@dataSize:
   316  0057                            ds      1
   317                           
   318  0058                     serialCom@offset:
   319  0058                            ds      1
   320                           
   321  0059                     serialCom@state:
   322  0059                            ds      1
   323                           
   324                           psect	bssBANK1,class=BANK1,space=1
   325                           global __pbssBANK1
   326  00A0                     __pbssBANK1:
   327  00A0                     _inBuf:
   328  00A0                            ds      64
   329                           
   330                           psect clrtext,class=CODE,delta=2
   331                           global clear_ram
   332                           ;	Called with FSR containing the base address, and
   333                           ;	W with the last address+1
   334  046A                     clear_ram:
   335  046A  0064               	clrwdt			;clear the watchdog before getting into this loop
   336  046B                     clrloop:
   337  046B  0180               	clrf	indf		;clear RAM location pointed to by FSR
   338  046C  0A84               	incf	fsr,f		;increment pointer
   339  046D  0604               	xorwf	fsr,w		;XOR with final address
   340  046E  1903               	btfsc	status,2	;have we reached the end yet?
   341  046F  3400               	retlw	0		;all done for this memory range, return
   342  0470  0604               	xorwf	fsr,w		;XOR again to restore value
   343  0471  2C6B               	goto	clrloop		;do the next byte
   344                           
   345                           ; Clear objects allocated to COMMON
   346                           psect cinit,class=CODE,delta=2
   347  0438  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   348  0439  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   349  043A  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   350  043B  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   351  043C  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   352                           ; Clear objects allocated to BANK0
   353                           psect cinit,class=CODE,delta=2
   354  043D  1383               	bcf	status, 7	;select IRP bank0
   355  043E  3020               	movlw	low(__pbssBANK0)
   356  043F  0084               	movwf	fsr
   357  0440  305A               	movlw	low((__pbssBANK0)+03Ah)
   358  0441  118A  246A  118A   	fcall	clear_ram
   359                           ; Clear objects allocated to BANK1
   360                           psect cinit,class=CODE,delta=2
   361  0444  30A0               	movlw	low(__pbssBANK1)
   362  0445  0084               	movwf	fsr
   363  0446  30E0               	movlw	low((__pbssBANK1)+040h)
   364  0447  118A  246A  118A   	fcall	clear_ram
   365                           psect cinit,class=CODE,delta=2
   366                           global end_of_initialization
   367                           
   368                           ;End of C runtime variable initialization code
   369                           
   370  044A                     end_of_initialization:
   371  044A  0183               clrf status
   372  044B  118A  2BA4         ljmp _main	;jump to C main() function
   373                           psect	cstackCOMMON,class=COMMON,space=1
   374                           global __pcstackCOMMON
   375  0075                     __pcstackCOMMON:
   376                           	global	?_SetUSARTReceiverDisabled
   377  0075                     ?_SetUSARTReceiverDisabled:	; 0 bytes @ 0x0
   378                           	global	??_SetUSARTReceiverDisabled
   379  0075                     ??_SetUSARTReceiverDisabled:	; 0 bytes @ 0x0
   380                           	global	?_SetUSARTReceiverEnabled
   381  0075                     ?_SetUSARTReceiverEnabled:	; 0 bytes @ 0x0
   382                           	global	?_evaluateCommand
   383  0075                     ?_evaluateCommand:	; 0 bytes @ 0x0
   384                           	global	?_Init
   385  0075                     ?_Init:	; 0 bytes @ 0x0
   386                           	global	?_SetSendingPWM
   387  0075                     ?_SetSendingPWM:	; 0 bytes @ 0x0
   388                           	global	?_Interrupt
   389  0075                     ?_Interrupt:	; 0 bytes @ 0x0
   390                           	global	??_Interrupt
   391  0075                     ??_Interrupt:	; 0 bytes @ 0x0
   392                           	global	?_SendLine
   393  0075                     ?_SendLine:	; 0 bytes @ 0x0
   394                           	global	?_SetUSART
   395  0075                     ?_SetUSART:	; 0 bytes @ 0x0
   396                           	global	?_setup
   397  0075                     ?_setup:	; 0 bytes @ 0x0
   398                           	global	?_serialCom
   399  0075                     ?_serialCom:	; 0 bytes @ 0x0
   400                           	global	?_main
   401  0075                     ?_main:	; 0 bytes @ 0x0
   402                           	global	?i1_SetUSARTReceiverEnabled
   403  0075                     ?i1_SetUSARTReceiverEnabled:	; 0 bytes @ 0x0
   404                           	global	??i1_SetUSARTReceiverEnabled
   405  0075                     ??i1_SetUSARTReceiverEnabled:	; 0 bytes @ 0x0
   406                           	global	?_read8
   407  0075                     ?_read8:	; 1 bytes @ 0x0
   408                           	global	?_GetTimesHeartBeat
   409  0075                     ?_GetTimesHeartBeat:	; 1 bytes @ 0x0
   410                           	global	?_SerialRead
   411  0075                     ?_SerialRead:	; 1 bytes @ 0x0
   412                           	global	?_SerialAvailable
   413  0075                     ?_SerialAvailable:	; 1 bytes @ 0x0
   414  0075                     	ds	5
   415                           psect	cstackBANK0,class=BANK0,space=1
   416                           global __pcstackBANK0
   417  005A                     __pcstackBANK0:
   418                           	global	??_SetUSARTReceiverEnabled
   419  005A                     ??_SetUSARTReceiverEnabled:	; 0 bytes @ 0x0
   420                           	global	??_evaluateCommand
   421  005A                     ??_evaluateCommand:	; 0 bytes @ 0x0
   422                           	global	??_read8
   423  005A                     ??_read8:	; 0 bytes @ 0x0
   424                           	global	?_delay
   425  005A                     ?_delay:	; 0 bytes @ 0x0
   426                           	global	??_Init
   427  005A                     ??_Init:	; 0 bytes @ 0x0
   428                           	global	??_SetSendingPWM
   429  005A                     ??_SetSendingPWM:	; 0 bytes @ 0x0
   430                           	global	??_GetTimesHeartBeat
   431  005A                     ??_GetTimesHeartBeat:	; 0 bytes @ 0x0
   432                           	global	?_SendString
   433  005A                     ?_SendString:	; 0 bytes @ 0x0
   434                           	global	??_SetUSART
   435  005A                     ??_SetUSART:	; 0 bytes @ 0x0
   436                           	global	??_SerialRead
   437  005A                     ??_SerialRead:	; 0 bytes @ 0x0
   438                           	global	??_SerialAvailable
   439  005A                     ??_SerialAvailable:	; 0 bytes @ 0x0
   440                           	global	SendString@tcString
   441  005A                     SendString@tcString:	; 2 bytes @ 0x0
   442                           	global	delay@tnDelay
   443  005A                     delay@tnDelay:	; 4 bytes @ 0x0
   444  005A                     	ds	1
   445                           	global	GetTimesHeartBeat@cTimes
   446  005B                     GetTimesHeartBeat@cTimes:	; 1 bytes @ 0x1
   447                           	global	SerialRead@cResult
   448  005B                     SerialRead@cResult:	; 1 bytes @ 0x1
   449  005B                     	ds	1
   450                           	global	??_SendString
   451  005C                     ??_SendString:	; 0 bytes @ 0x2
   452                           	global	SetSendingPWM@nFlag
   453  005C                     SetSendingPWM@nFlag:	; 1 bytes @ 0x2
   454                           	global	GetTimesHeartBeat@cNewHeartBeat
   455  005C                     GetTimesHeartBeat@cNewHeartBeat:	; 1 bytes @ 0x2
   456                           	global	evaluateCommand@c
   457  005C                     evaluateCommand@c:	; 1 bytes @ 0x2
   458  005C                     	ds	1
   459                           	global	SendString@nSendLinePos
   460  005D                     SendString@nSendLinePos:	; 1 bytes @ 0x3
   461                           	global	evaluateCommand@nEncodeLow
   462  005D                     evaluateCommand@nEncodeLow:	; 2 bytes @ 0x3
   463  005D                     	ds	1
   464                           	global	??_delay
   465  005E                     ??_delay:	; 0 bytes @ 0x4
   466                           	global	??_SendLine
   467  005E                     ??_SendLine:	; 0 bytes @ 0x4
   468                           	global	SendLine@tcString
   469  005E                     SendLine@tcString:	; 1 bytes @ 0x4
   470  005E                     	ds	1
   471                           	global	evaluateCommand@nEncodeHigh
   472  005F                     evaluateCommand@nEncodeHigh:	; 2 bytes @ 0x5
   473  005F                     	ds	2
   474                           	global	evaluateCommand@nChannel
   475  0061                     evaluateCommand@nChannel:	; 2 bytes @ 0x7
   476  0061                     	ds	1
   477                           	global	??_setup
   478  0062                     ??_setup:	; 0 bytes @ 0x8
   479  0062                     	ds	1
   480                           	global	evaluateCommand@nEncode
   481  0063                     evaluateCommand@nEncode:	; 2 bytes @ 0x9
   482  0063                     	ds	2
   483                           	global	evaluateCommand@cTemp
   484  0065                     evaluateCommand@cTemp:	; 1 bytes @ 0xB
   485  0065                     	ds	1
   486                           	global	??_serialCom
   487  0066                     ??_serialCom:	; 0 bytes @ 0xC
   488                           	global	setup@i
   489  0066                     setup@i:	; 1 bytes @ 0xC
   490  0066                     	ds	1
   491                           	global	_serialCom$2238
   492  0067                     _serialCom$2238:	; 2 bytes @ 0xD
   493  0067                     	ds	2
   494                           	global	_serialCom$2239
   495  0069                     _serialCom$2239:	; 2 bytes @ 0xF
   496  0069                     	ds	2
   497                           	global	serialCom@cc
   498  006B                     serialCom@cc:	; 1 bytes @ 0x11
   499  006B                     	ds	1
   500                           	global	serialCom@c
   501  006C                     serialCom@c:	; 1 bytes @ 0x12
   502  006C                     	ds	1
   503                           	global	??_main
   504  006D                     ??_main:	; 0 bytes @ 0x13
   505  006D                     	ds	1
   506 ;;Data sizes: Strings 12, constant 0, data 0, bss 127, persistent 0 stack 0
   507 ;;Auto spaces:   Size  Autos    Used
   508 ;; COMMON          14      5      10
   509 ;; BANK0           80     20      78
   510 ;; BANK1           80      0      64
   511 ;; BANK2           80      0       0
   512                           
   513 ;;
   514 ;; Pointer list with targets:
   515                           
   516 ;; sp__utoa	PTR unsigned char  size(1) Largest target is 10
   517 ;;		 -> NumericSendString@cPara(COMMON[10]), 
   518 ;;
   519 ;; sp__itoa	PTR unsigned char  size(1) Largest target is 10
   520 ;;		 -> NumericSendString@cPara(COMMON[10]), 
   521 ;;
   522 ;; SendLine@tcString	PTR const unsigned char  size(1) Largest target is 12
   523 ;;		 -> STR_1(CODE[12]), 
   524 ;;
   525 ;; SendString@tcString	PTR const unsigned char  size(2) Largest target is 12
   526 ;;		 -> STR_1(CODE[12]), NumericSendString@cPara(COMMON[10]), 
   527 ;;
   528                           
   529                           
   530 ;;
   531 ;; Critical Paths under _main in COMMON
   532 ;;
   533 ;;   None.
   534 ;;
   535 ;; Critical Paths under _Interrupt in COMMON
   536 ;;
   537 ;;   None.
   538 ;;
   539 ;; Critical Paths under _main in BANK0
   540 ;;
   541 ;;   _main->_serialCom
   542 ;;   _serialCom->_evaluateCommand
   543 ;;   _setup->_delay
   544 ;;   _SendLine->_SendString
   545 ;;
   546 ;; Critical Paths under _Interrupt in BANK0
   547 ;;
   548 ;;   None.
   549 ;;
   550 ;; Critical Paths under _main in BANK1
   551 ;;
   552 ;;   None.
   553 ;;
   554 ;; Critical Paths under _Interrupt in BANK1
   555 ;;
   556 ;;   None.
   557 ;;
   558 ;; Critical Paths under _main in BANK2
   559 ;;
   560 ;;   None.
   561 ;;
   562 ;; Critical Paths under _Interrupt in BANK2
   563 ;;
   564 ;;   None.
   565                           
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   568 ;;
   569                           
   570 ;;
   571 ;;Call Graph Tables:
   572 ;;
   573 ;; ---------------------------------------------------------------------------------
   574 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   575 ;; ---------------------------------------------------------------------------------
   576 ;; (0) _main                                                 1     1      0    1670
   577 ;;                                             19 BANK0      1     1      0
   578 ;;                               _Init
   579 ;;                              _setup
   580 ;;                          _serialCom
   581 ;;                  _GetTimesHeartBeat
   582 ;;                      _SetSendingPWM
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _serialCom                                            7     7      0    1005
   585 ;;                                             12 BANK0      7     7      0
   586 ;;                    _SerialAvailable
   587 ;;                         _SerialRead
   588 ;;                    _evaluateCommand
   589 ;; ---------------------------------------------------------------------------------
   590 ;; (1) _setup                                                5     5      0     526
   591 ;;                                              8 BANK0      5     5      0
   592 ;;                           _SetUSART
   593 ;;            _SetUSARTReceiverEnabled
   594 ;;                           _SendLine
   595 ;;                      _SetSendingPWM
   596 ;;                  _GetTimesHeartBeat
   597 ;;                              _delay
   598 ;; ---------------------------------------------------------------------------------
   599 ;; (2) _evaluateCommand                                     12    12      0     451
   600 ;;                                              0 BANK0     12    12      0
   601 ;;                              _read8
   602 ;; ---------------------------------------------------------------------------------
   603 ;; (2) _SendLine                                             1     1      0     161
   604 ;;                                              4 BANK0      1     1      0
   605 ;;                         _SendString
   606 ;; ---------------------------------------------------------------------------------
   607 ;; (3) _read8                                                0     0      0       0
   608 ;; ---------------------------------------------------------------------------------
   609 ;; (2) _SerialAvailable                                      0     0      0       0
   610 ;; ---------------------------------------------------------------------------------
   611 ;; (2) _SerialRead                                           2     2      0      37
   612 ;;                                              0 BANK0      2     2      0
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (2) _SetUSART                                             0     0      0       0
   615 ;; ---------------------------------------------------------------------------------
   616 ;; (3) _SendString                                           4     2      2     130
   617 ;;                                              0 BANK0      4     2      2
   618 ;; ---------------------------------------------------------------------------------
   619 ;; (1) _GetTimesHeartBeat                                    3     3      0     102
   620 ;;                                              0 BANK0      3     3      0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (2) _SetUSARTReceiverEnabled                              0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (1) _SetSendingPWM                                        3     3      0      37
   625 ;;                                              0 BANK0      3     3      0
   626 ;; ---------------------------------------------------------------------------------
   627 ;; (1) _Init                                                 0     0      0       0
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (2) _delay                                                8     4      4      65
   630 ;;                                              0 BANK0      8     4      4
   631 ;; ---------------------------------------------------------------------------------
   632 ;; Estimated maximum stack depth 3
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   635 ;; ---------------------------------------------------------------------------------
   636 ;; (4) _Interrupt                                            5     5      0       0
   637 ;;                                              0 COMMON     5     5      0
   638 ;;           _SetUSARTReceiverDisabled
   639 ;;          i1_SetUSARTReceiverEnabled
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (5) i1_SetUSARTReceiverEnabled                            0     0      0       0
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (5) _SetUSARTReceiverDisabled                             0     0      0       0
   644 ;; ---------------------------------------------------------------------------------
   645 ;; Estimated maximum stack depth 5
   646 ;; ---------------------------------------------------------------------------------
   647                           
   648 ;; Call Graph Graphs:
   649                           
   650 ;; _main (ROOT)
   651 ;;   _Init
   652 ;;   _setup
   653 ;;     _SetUSART
   654 ;;     _SetUSARTReceiverEnabled
   655 ;;     _SendLine
   656 ;;       _SendString
   657 ;;     _SetSendingPWM
   658 ;;     _GetTimesHeartBeat
   659 ;;     _delay
   660 ;;   _serialCom
   661 ;;     _SerialAvailable
   662 ;;     _SerialRead
   663 ;;     _evaluateCommand
   664 ;;       _read8
   665 ;;   _GetTimesHeartBeat
   666 ;;   _SetSendingPWM
   667 ;;
   668 ;; _Interrupt (ROOT)
   669 ;;   _SetUSARTReceiverDisabled
   670 ;;   i1_SetUSARTReceiverEnabled
   671 ;;
   672                           
   673 ;; Address spaces:
   674                           
   675 ;;Name               Size   Autos  Total    Cost      Usage
   676 ;;BITCOMMON            E      0       0       0        0.0%
   677 ;;EEDATA             100      0       0       0        0.0%
   678 ;;NULL                 0      0       0       0        0.0%
   679 ;;CODE                 0      0       0       0        0.0%
   680 ;;COMMON               E      5       A       1       71.4%
   681 ;;BITSFR0              0      0       0       1        0.0%
   682 ;;SFR0                 0      0       0       1        0.0%
   683 ;;BITSFR1              0      0       0       2        0.0%
   684 ;;SFR1                 0      0       0       2        0.0%
   685 ;;STACK                0      0       7       2        0.0%
   686 ;;BANK0               50     14      4E       3       97.5%
   687 ;;BITBANK1            50      0       0       4        0.0%
   688 ;;BITSFR3              0      0       0       4        0.0%
   689 ;;SFR3                 0      0       0       4        0.0%
   690 ;;BANK1               50      0      40       5       80.0%
   691 ;;BITSFR2              0      0       0       5        0.0%
   692 ;;SFR2                 0      0       0       5        0.0%
   693 ;;BITBANK2            50      0       0       6        0.0%
   694 ;;BANK2               50      0       0       7        0.0%
   695 ;;ABS                  0      0      98       8        0.0%
   696 ;;BITBANK0            50      0       0       9        0.0%
   697 ;;DATA                 0      0      9F      10        0.0%
   698                           
   699                           	global	_main
   700                           psect	maintext,global,class=CODE,delta=2
   701                           global __pmaintext
   702  03A4                     __pmaintext:
   703                           
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 175 in file "MSPDecode.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;		None               void
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 17F/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   720 ;;      Params:         0       0       0       0
   721 ;;      Locals:         0       0       0       0
   722 ;;      Temps:          0       1       0       0
   723 ;;      Totals:         0       1       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels required when called:    5
   726 ;; This function calls:
   727 ;;		_Init
   728 ;;		_setup
   729 ;;		_serialCom
   730 ;;		_GetTimesHeartBeat
   731 ;;		_SetSendingPWM
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           psect	maintext
   737                           	file	"MSPDecode.c"
   738                           	line	175
   739                           	global	__size_of_main
   740  0024                     	__size_of_main	equ	__end_of_main-_main
   741                           	
   742  03A4                     _main:	
   743                           	opt	stack 3
   744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   745                           	line	176
   746                           	
   747  03A4                     l5822:	
   748                           ;MSPDecode.c: 176: Init();
   749  03A4  118A  230B  118A   	fcall	_Init
   750                           	line	177
   751                           	
   752  03A7                     l5824:	
   753                           ;MSPDecode.c: 177: setup();
   754  03A7  118A  226E  118A   	fcall	_setup
   755  03AA  2BAB               	goto	l5826
   756                           	line	179
   757                           ;MSPDecode.c: 179: for (;;) {
   758                           	
   759  03AB                     l1828:	
   760                           	line	180
   761                           	
   762  03AB                     l5826:	
   763                           ;MSPDecode.c: 180: serialCom();
   764  03AB  118A  2109  118A   	fcall	_serialCom
   765                           	line	182
   766                           ;MSPDecode.c: 182: cTimesHeartBeat = GetTimesHeartBeat();
   767  03AE  118A  2422  118A   	fcall	_GetTimesHeartBeat
   768  03B1  1283               	bcf	status, 5	;RP0=0, select bank0
   769  03B2  1303               	bcf	status, 6	;RP1=0, select bank0
   770  03B3  00ED               	movwf	(??_main+0)+0
   771  03B4  086D               	movf	(??_main+0)+0,w
   772  03B5  00D3               	movwf	(_cTimesHeartBeat)
   773                           	line	185
   774                           	
   775  03B6                     l5828:	
   776                           ;MSPDecode.c: 185: nPWM[0] = nServo[0];
   777  03B6  0841               	movf	(_nServo+1),w
   778  03B7  01CB               	clrf	(_nPWM+1)	;volatile
   779  03B8  07CB               	addwf	(_nPWM+1)	;volatile
   780  03B9  0840               	movf	(_nServo),w
   781  03BA  01CA               	clrf	(_nPWM)	;volatile
   782  03BB  07CA               	addwf	(_nPWM)	;volatile
   783                           
   784                           	line	186
   785                           	
   786  03BC                     l5830:	
   787                           ;MSPDecode.c: 186: nPWM[1] = nServo[1];
   788  03BC  0843               	movf	1+(_nServo)+02h,w
   789  03BD  01CD               	clrf	1+(_nPWM)+02h	;volatile
   790  03BE  07CD               	addwf	1+(_nPWM)+02h	;volatile
   791  03BF  0842               	movf	0+(_nServo)+02h,w
   792  03C0  01CC               	clrf	0+(_nPWM)+02h	;volatile
   793  03C1  07CC               	addwf	0+(_nPWM)+02h	;volatile
   794                           
   795                           	line	187
   796                           ;MSPDecode.c: 187: SetSendingPWM();
   797  03C2  118A  22C9  118A   	fcall	_SetSendingPWM
   798                           	line	188
   799                           ;MSPDecode.c: 188: }
   800  03C5  2BAB               	goto	l5826
   801                           	
   802  03C6                     l1829:	
   803                           	line	189
   804                           	
   805  03C6                     l1830:	
   806                           	global	start
   807  03C6  118A  2811         	ljmp	start
   808                           	opt stack 0
   809                           GLOBAL	__end_of_main
   810  03C8                     	__end_of_main:
   811 ;; =============== function _main ends ============
   812                           
   813                           	signat	_main,88
   814                           	global	_serialCom
   815                           psect	text668,local,class=CODE,delta=2
   816                           global __ptext668
   817  0109                     __ptext668:
   818                           
   819 ;; *************** function _serialCom *****************
   820 ;; Defined at:
   821 ;;		line 46 in file "MSPDecode.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  c               1   18[BANK0 ] unsigned char 
   826 ;;  cc              1   17[BANK0 ] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;		None               void
   829 ;; Registers used:
   830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   836 ;;      Params:         0       0       0       0
   837 ;;      Locals:         0       6       0       0
   838 ;;      Temps:          0       1       0       0
   839 ;;      Totals:         0       7       0       0
   840 ;;Total ram usage:        7 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    4
   843 ;; This function calls:
   844 ;;		_SerialAvailable
   845 ;;		_SerialRead
   846 ;;		_evaluateCommand
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           psect	text668
   852                           	file	"MSPDecode.c"
   853                           	line	46
   854                           	global	__size_of_serialCom
   855  00CD                     	__size_of_serialCom	equ	__end_of_serialCom-_serialCom
   856                           	
   857  0109                     _serialCom:	
   858                           	opt	stack 3
   859                           ; Regs used in _serialCom: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   860                           	line	50
   861                           	
   862  0109                     l5752:	
   863                           ;MSPDecode.c: 47: unsigned char c, cc;
   864                           ;MSPDecode.c: 48: static unsigned char state, dataSize, offset;
   865                           ;MSPDecode.c: 50: cc = SerialAvailable();
   866  0109  118A  2487  118A   	fcall	_SerialAvailable
   867  010C  1283               	bcf	status, 5	;RP0=0, select bank0
   868  010D  1303               	bcf	status, 6	;RP1=0, select bank0
   869  010E  00E6               	movwf	(??_serialCom+0)+0
   870  010F  0866               	movf	(??_serialCom+0)+0,w
   871  0110  00EB               	movwf	(serialCom@cc)
   872                           	line	51
   873                           ;MSPDecode.c: 51: while (cc--) {
   874  0111  29CC               	goto	l5820
   875                           	
   876  0112                     l1768:	
   877                           	line	52
   878                           	
   879  0112                     l5754:	
   880                           ;MSPDecode.c: 52: c = SerialRead();
   881  0112  118A  23C8  118A   	fcall	_SerialRead
   882  0115  1283               	bcf	status, 5	;RP0=0, select bank0
   883  0116  1303               	bcf	status, 6	;RP1=0, select bank0
   884  0117  00E6               	movwf	(??_serialCom+0)+0
   885  0118  0866               	movf	(??_serialCom+0)+0,w
   886  0119  00EC               	movwf	(serialCom@c)
   887                           	line	54
   888                           	
   889  011A                     l5756:	
   890                           ;MSPDecode.c: 54: if (state == IDLE) {
   891  011A  08D9               	movf	(serialCom@state),f
   892  011B  1D03               	skipz
   893  011C  291E               	goto	u3631
   894  011D  291F               	goto	u3630
   895  011E                     u3631:
   896  011E  292A               	goto	l5762
   897  011F                     u3630:
   898                           	line	55
   899                           	
   900  011F                     l5758:	
   901                           ;MSPDecode.c: 55: if (c == '$') state = HEADER_START;
   902  011F  086C               	movf	(serialCom@c),w
   903  0120  3A24               	xorlw	024h
   904  0121  1D03               	skipz
   905  0122  2924               	goto	u3641
   906  0123  2925               	goto	u3640
   907  0124                     u3641:
   908  0124  29CC               	goto	l5820
   909  0125                     u3640:
   910                           	
   911  0125                     l5760:	
   912  0125  01D9               	clrf	(serialCom@state)
   913  0126  1403               	bsf	status,0
   914  0127  0DD9               	rlf	(serialCom@state),f
   915  0128  29CC               	goto	l5820
   916                           	
   917  0129                     l1770:	
   918                           	line	56
   919                           ;MSPDecode.c: 56: } else if (state == HEADER_START) {
   920  0129  29CC               	goto	l5820
   921                           	
   922  012A                     l1769:	
   923                           	
   924  012A                     l5762:	
   925  012A  0859               	movf	(serialCom@state),w
   926  012B  3A01               	xorlw	01h
   927  012C  1D03               	skipz
   928  012D  292F               	goto	u3651
   929  012E  2930               	goto	u3650
   930  012F                     u3651:
   931  012F  2942               	goto	l5770
   932  0130                     u3650:
   933                           	line	57
   934                           	
   935  0130                     l5764:	
   936                           ;MSPDecode.c: 57: state = (c == 'M') ? HEADER_M : IDLE;
   937  0130  086C               	movf	(serialCom@c),w
   938  0131  3A4D               	xorlw	04Dh
   939  0132  1903               	skipnz
   940  0133  2935               	goto	u3661
   941  0134  2936               	goto	u3660
   942  0135                     u3661:
   943  0135  2939               	goto	l5768
   944  0136                     u3660:
   945                           	
   946  0136                     l5766:	
   947  0136  01E7               	clrf	(_serialCom$2238)
   948  0137  01E8               	clrf	(_serialCom$2238+1)
   949  0138  293D               	goto	l1776
   950                           	
   951  0139                     l1774:	
   952                           	
   953  0139                     l5768:	
   954  0139  3002               	movlw	low(02h)
   955  013A  00E7               	movwf	(_serialCom$2238)
   956  013B  3000               	movlw	high(02h)
   957  013C  00E8               	movwf	((_serialCom$2238))+1
   958                           	
   959  013D                     l1776:	
   960  013D  0867               	movf	(_serialCom$2238),w
   961  013E  00E6               	movwf	(??_serialCom+0)+0
   962  013F  0866               	movf	(??_serialCom+0)+0,w
   963  0140  00D9               	movwf	(serialCom@state)
   964                           	line	58
   965                           ;MSPDecode.c: 58: } else if (state == HEADER_M) {
   966  0141  29CC               	goto	l5820
   967                           	
   968  0142                     l1772:	
   969                           	
   970  0142                     l5770:	
   971  0142  0859               	movf	(serialCom@state),w
   972  0143  3A02               	xorlw	02h
   973  0144  1D03               	skipz
   974  0145  2947               	goto	u3671
   975  0146  2948               	goto	u3670
   976  0147                     u3671:
   977  0147  2966               	goto	l5782
   978  0148                     u3670:
   979                           	line	59
   980                           	
   981  0148                     l5772:	
   982                           ;MSPDecode.c: 59: state = ((c == '!') || (c == '<') || (c == '>')) ? HEADER_ARROW : IDLE
                                 ;
   983  0148  086C               	movf	(serialCom@c),w
   984  0149  3A21               	xorlw	021h
   985  014A  1903               	skipnz
   986  014B  294D               	goto	u3681
   987  014C  294E               	goto	u3680
   988  014D                     u3681:
   989  014D  295D               	goto	l5780
   990  014E                     u3680:
   991                           	
   992  014E                     l5774:	
   993  014E  086C               	movf	(serialCom@c),w
   994  014F  3A3C               	xorlw	03Ch
   995  0150  1903               	skipnz
   996  0151  2953               	goto	u3691
   997  0152  2954               	goto	u3690
   998  0153                     u3691:
   999  0153  295D               	goto	l5780
  1000  0154                     u3690:
  1001                           	
  1002  0154                     l5776:	
  1003  0154  086C               	movf	(serialCom@c),w
  1004  0155  3A3E               	xorlw	03Eh
  1005  0156  1903               	skipnz
  1006  0157  2959               	goto	u3701
  1007  0158  295A               	goto	u3700
  1008  0159                     u3701:
  1009  0159  295D               	goto	l5780
  1010  015A                     u3700:
  1011                           	
  1012  015A                     l5778:	
  1013  015A  01E9               	clrf	(_serialCom$2239)
  1014  015B  01EA               	clrf	(_serialCom$2239+1)
  1015  015C  2961               	goto	l1782
  1016                           	
  1017  015D                     l1780:	
  1018                           	
  1019  015D                     l5780:	
  1020  015D  3003               	movlw	low(03h)
  1021  015E  00E9               	movwf	(_serialCom$2239)
  1022  015F  3000               	movlw	high(03h)
  1023  0160  00EA               	movwf	((_serialCom$2239))+1
  1024                           	
  1025  0161                     l1782:	
  1026  0161  0869               	movf	(_serialCom$2239),w
  1027  0162  00E6               	movwf	(??_serialCom+0)+0
  1028  0163  0866               	movf	(??_serialCom+0)+0,w
  1029  0164  00D9               	movwf	(serialCom@state)
  1030                           	line	60
  1031                           ;MSPDecode.c: 60: } else if (state == HEADER_ARROW) {
  1032  0165  29CC               	goto	l5820
  1033                           	
  1034  0166                     l1778:	
  1035                           	
  1036  0166                     l5782:	
  1037  0166  0859               	movf	(serialCom@state),w
  1038  0167  3A03               	xorlw	03h
  1039  0168  1D03               	skipz
  1040  0169  296B               	goto	u3711
  1041  016A  296C               	goto	u3710
  1042  016B                     u3711:
  1043  016B  2983               	goto	l5794
  1044  016C                     u3710:
  1045                           	line	61
  1046                           	
  1047  016C                     l5784:	
  1048                           ;MSPDecode.c: 61: if (c > 64) {
  1049  016C  3041               	movlw	(041h)
  1050  016D  026C               	subwf	(serialCom@c),w
  1051  016E  1C03               	skipc
  1052  016F  2971               	goto	u3721
  1053  0170  2972               	goto	u3720
  1054  0171                     u3721:
  1055  0171  2974               	goto	l5788
  1056  0172                     u3720:
  1057                           	line	62
  1058                           	
  1059  0172                     l5786:	
  1060                           ;MSPDecode.c: 62: state = IDLE;
  1061  0172  01D9               	clrf	(serialCom@state)
  1062                           	line	63
  1063                           ;MSPDecode.c: 63: continue;
  1064  0173  29CC               	goto	l5820
  1065                           	line	64
  1066                           	
  1067  0174                     l1785:	
  1068                           	line	65
  1069                           	
  1070  0174                     l5788:	
  1071                           ;MSPDecode.c: 64: }
  1072                           ;MSPDecode.c: 65: dataSize = c;
  1073  0174  086C               	movf	(serialCom@c),w
  1074  0175  00E6               	movwf	(??_serialCom+0)+0
  1075  0176  0866               	movf	(??_serialCom+0)+0,w
  1076  0177  00D7               	movwf	(serialCom@dataSize)
  1077                           	line	66
  1078                           ;MSPDecode.c: 66: checksum = c;
  1079  0178  086C               	movf	(serialCom@c),w
  1080  0179  00E6               	movwf	(??_serialCom+0)+0
  1081  017A  0866               	movf	(??_serialCom+0)+0,w
  1082  017B  00D4               	movwf	(_checksum)
  1083                           	line	67
  1084                           	
  1085  017C                     l5790:	
  1086                           ;MSPDecode.c: 67: offset = 0;
  1087  017C  01D8               	clrf	(serialCom@offset)
  1088                           	line	68
  1089                           	
  1090  017D                     l5792:	
  1091                           ;MSPDecode.c: 68: indRX = 0;
  1092  017D  01D6               	clrf	(_indRX)
  1093                           	line	69
  1094                           ;MSPDecode.c: 69: state = HEADER_SIZE;
  1095  017E  3004               	movlw	(04h)
  1096  017F  00E6               	movwf	(??_serialCom+0)+0
  1097  0180  0866               	movf	(??_serialCom+0)+0,w
  1098  0181  00D9               	movwf	(serialCom@state)
  1099                           	line	70
  1100                           ;MSPDecode.c: 70: } else if (state == HEADER_SIZE) {
  1101  0182  29CC               	goto	l5820
  1102                           	
  1103  0183                     l1784:	
  1104                           	
  1105  0183                     l5794:	
  1106  0183  0859               	movf	(serialCom@state),w
  1107  0184  3A04               	xorlw	04h
  1108  0185  1D03               	skipz
  1109  0186  2988               	goto	u3731
  1110  0187  2989               	goto	u3730
  1111  0188                     u3731:
  1112  0188  2996               	goto	l5802
  1113  0189                     u3730:
  1114                           	line	71
  1115                           	
  1116  0189                     l5796:	
  1117                           ;MSPDecode.c: 71: cmdMSP = c;
  1118  0189  086C               	movf	(serialCom@c),w
  1119  018A  00E6               	movwf	(??_serialCom+0)+0
  1120  018B  0866               	movf	(??_serialCom+0)+0,w
  1121  018C  00D5               	movwf	(_cmdMSP)
  1122                           	line	72
  1123                           	
  1124  018D                     l5798:	
  1125                           ;MSPDecode.c: 72: checksum ^= c;
  1126  018D  086C               	movf	(serialCom@c),w
  1127  018E  00E6               	movwf	(??_serialCom+0)+0
  1128  018F  0866               	movf	(??_serialCom+0)+0,w
  1129  0190  06D4               	xorwf	(_checksum),f
  1130                           	line	73
  1131                           	
  1132  0191                     l5800:	
  1133                           ;MSPDecode.c: 73: state = HEADER_CMD;
  1134  0191  3005               	movlw	(05h)
  1135  0192  00E6               	movwf	(??_serialCom+0)+0
  1136  0193  0866               	movf	(??_serialCom+0)+0,w
  1137  0194  00D9               	movwf	(serialCom@state)
  1138                           	line	74
  1139                           ;MSPDecode.c: 74: } else if (state == HEADER_CMD) {
  1140  0195  29CC               	goto	l5820
  1141                           	
  1142  0196                     l1787:	
  1143                           	
  1144  0196                     l5802:	
  1145  0196  0859               	movf	(serialCom@state),w
  1146  0197  3A05               	xorlw	05h
  1147  0198  1D03               	skipz
  1148  0199  299B               	goto	u3741
  1149  019A  299C               	goto	u3740
  1150  019B                     u3741:
  1151  019B  29C4               	goto	l1789
  1152  019C                     u3740:
  1153                           	line	75
  1154                           	
  1155  019C                     l5804:	
  1156                           ;MSPDecode.c: 75: if (offset < dataSize) {
  1157  019C  0857               	movf	(serialCom@dataSize),w
  1158  019D  0258               	subwf	(serialCom@offset),w
  1159  019E  1803               	skipnc
  1160  019F  29A1               	goto	u3751
  1161  01A0  29A2               	goto	u3750
  1162  01A1                     u3751:
  1163  01A1  29B3               	goto	l5812
  1164  01A2                     u3750:
  1165                           	line	76
  1166                           	
  1167  01A2                     l5806:	
  1168                           ;MSPDecode.c: 76: checksum ^= c;
  1169  01A2  086C               	movf	(serialCom@c),w
  1170  01A3  00E6               	movwf	(??_serialCom+0)+0
  1171  01A4  0866               	movf	(??_serialCom+0)+0,w
  1172  01A5  06D4               	xorwf	(_checksum),f
  1173                           	line	77
  1174                           	
  1175  01A6                     l5808:	
  1176                           ;MSPDecode.c: 77: inBuf[offset++] = c;
  1177  01A6  086C               	movf	(serialCom@c),w
  1178  01A7  00E6               	movwf	(??_serialCom+0)+0
  1179  01A8  0858               	movf	(serialCom@offset),w
  1180  01A9  3EA0               	addlw	_inBuf&0ffh
  1181  01AA  0084               	movwf	fsr0
  1182  01AB  0866               	movf	(??_serialCom+0)+0,w
  1183  01AC  1383               	bcf	status, 7	;select IRP bank1
  1184  01AD  0080               	movwf	indf
  1185                           	
  1186  01AE                     l5810:	
  1187  01AE  3001               	movlw	(01h)
  1188  01AF  00E6               	movwf	(??_serialCom+0)+0
  1189  01B0  0866               	movf	(??_serialCom+0)+0,w
  1190  01B1  07D8               	addwf	(serialCom@offset),f
  1191                           	line	78
  1192                           ;MSPDecode.c: 78: } else {
  1193  01B2  29CC               	goto	l5820
  1194                           	
  1195  01B3                     l1790:	
  1196                           	line	79
  1197                           	
  1198  01B3                     l5812:	
  1199                           ;MSPDecode.c: 79: if (checksum == c)
  1200  01B3  0854               	movf	(_checksum),w
  1201  01B4  066C               	xorwf	(serialCom@c),w
  1202  01B5  1D03               	skipz
  1203  01B6  29B8               	goto	u3761
  1204  01B7  29B9               	goto	u3760
  1205  01B8                     u3761:
  1206  01B8  29BE               	goto	l5816
  1207  01B9                     u3760:
  1208                           	line	81
  1209                           	
  1210  01B9                     l5814:	
  1211                           ;MSPDecode.c: 80: {
  1212                           ;MSPDecode.c: 81: evaluateCommand(cmdMSP);
  1213  01B9  0855               	movf	(_cmdMSP),w
  1214  01BA  118A  2013  118A   	fcall	_evaluateCommand
  1215  01BD  29BE               	goto	l5816
  1216                           	line	82
  1217                           	
  1218  01BE                     l1792:	
  1219                           	line	83
  1220                           	
  1221  01BE                     l5816:	
  1222                           ;MSPDecode.c: 82: }
  1223                           ;MSPDecode.c: 83: state = IDLE;
  1224  01BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1225  01BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1226  01C0  01D9               	clrf	(serialCom@state)
  1227                           	line	84
  1228                           	
  1229  01C1                     l5818:	
  1230                           ;MSPDecode.c: 84: cc = 0;
  1231  01C1  01EB               	clrf	(serialCom@cc)
  1232  01C2  29CC               	goto	l5820
  1233                           	line	85
  1234                           	
  1235  01C3                     l1791:	
  1236                           	line	86
  1237                           ;MSPDecode.c: 85: }
  1238                           ;MSPDecode.c: 86: } else {
  1239  01C3  29CC               	goto	l5820
  1240                           	
  1241  01C4                     l1789:	
  1242                           	line	87
  1243                           ;MSPDecode.c: 87: state = IDLE;
  1244  01C4  01D9               	clrf	(serialCom@state)
  1245  01C5  29CC               	goto	l5820
  1246                           	line	88
  1247                           	
  1248  01C6                     l1793:	
  1249  01C6  29CC               	goto	l5820
  1250                           	
  1251  01C7                     l1788:	
  1252  01C7  29CC               	goto	l5820
  1253                           	
  1254  01C8                     l1786:	
  1255  01C8  29CC               	goto	l5820
  1256                           	
  1257  01C9                     l1783:	
  1258  01C9  29CC               	goto	l5820
  1259                           	
  1260  01CA                     l1777:	
  1261  01CA  29CC               	goto	l5820
  1262                           	
  1263  01CB                     l1771:	
  1264  01CB  29CC               	goto	l5820
  1265                           	line	89
  1266                           	
  1267  01CC                     l1767:	
  1268                           	line	51
  1269                           	
  1270  01CC                     l5820:	
  1271  01CC  3001               	movlw	low(01h)
  1272  01CD  02EB               	subwf	(serialCom@cc),f
  1273  01CE  086B               	movf	((serialCom@cc)),w
  1274  01CF  3AFF               	xorlw	0FFh
  1275  01D0  1D03               	skipz
  1276  01D1  29D3               	goto	u3771
  1277  01D2  29D4               	goto	u3770
  1278  01D3                     u3771:
  1279  01D3  2912               	goto	l5754
  1280  01D4                     u3770:
  1281  01D4  29D5               	goto	l1795
  1282                           	
  1283  01D5                     l1794:	
  1284                           	line	90
  1285                           	
  1286  01D5                     l1795:	
  1287  01D5  0008               	return
  1288                           	opt stack 0
  1289                           GLOBAL	__end_of_serialCom
  1290  01D6                     	__end_of_serialCom:
  1291 ;; =============== function _serialCom ends ============
  1292                           
  1293                           	signat	_serialCom,88
  1294                           	global	_setup
  1295                           psect	text669,local,class=CODE,delta=2
  1296                           global __ptext669
  1297  026E                     __ptext669:
  1298                           
  1299 ;; *************** function _setup *****************
  1300 ;; Defined at:
  1301 ;;		line 9 in file "MSPDecode.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;		None
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  i               1   12[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1315 ;;      Params:         0       0       0       0
  1316 ;;      Locals:         0       1       0       0
  1317 ;;      Temps:          0       4       0       0
  1318 ;;      Totals:         0       5       0       0
  1319 ;;Total ram usage:        5 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    4
  1322 ;; This function calls:
  1323 ;;		_SetUSART
  1324 ;;		_SetUSARTReceiverEnabled
  1325 ;;		_SendLine
  1326 ;;		_SetSendingPWM
  1327 ;;		_GetTimesHeartBeat
  1328 ;;		_delay
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           psect	text669
  1334                           	file	"MSPDecode.c"
  1335                           	line	9
  1336                           	global	__size_of_setup
  1337  005B                     	__size_of_setup	equ	__end_of_setup-_setup
  1338                           	
  1339  026E                     _setup:	
  1340                           	opt	stack 3
  1341                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1342                           	line	10
  1343                           	
  1344  026E                     l5722:	
  1345                           ;MSPDecode.c: 10: SetUSART();
  1346  026E  118A  244D  118A   	fcall	_SetUSART
  1347                           	line	11
  1348                           	
  1349  0271                     l5724:	
  1350                           ;MSPDecode.c: 11: SetUSARTReceiverEnabled();
  1351  0271  118A  2472  118A   	fcall	_SetUSARTReceiverEnabled
  1352                           	line	12
  1353                           	
  1354  0274                     l5726:	
  1355                           ;MSPDecode.c: 12: SendLine("USART Init.");
  1356  0274  3001               	movlw	((STR_1-__stringbase))&0ffh
  1357  0275  118A  23E9  118A   	fcall	_SendLine
  1358                           	line	16
  1359                           	
  1360  0278                     l5728:	
  1361                           ;MSPDecode.c: 16: for (unsigned char i = 0; i < 2; i++) {
  1362  0278  1283               	bcf	status, 5	;RP0=0, select bank0
  1363  0279  1303               	bcf	status, 6	;RP1=0, select bank0
  1364  027A  01E6               	clrf	(setup@i)
  1365                           	
  1366  027B                     l5730:	
  1367  027B  3002               	movlw	(02h)
  1368  027C  0266               	subwf	(setup@i),w
  1369  027D  1C03               	skipc
  1370  027E  2A80               	goto	u3611
  1371  027F  2A81               	goto	u3610
  1372  0280                     u3611:
  1373  0280  2A83               	goto	l5734
  1374  0281                     u3610:
  1375  0281  2AAD               	goto	l5740
  1376                           	
  1377  0282                     l5732:	
  1378  0282  2AAD               	goto	l5740
  1379                           	
  1380  0283                     l1756:	
  1381                           	line	17
  1382                           	
  1383  0283                     l5734:	
  1384                           ;MSPDecode.c: 17: nServo[i] = 6000;
  1385  0283  0866               	movf	(setup@i),w
  1386  0284  00E2               	movwf	(??_setup+0)+0
  1387  0285  0762               	addwf	(??_setup+0)+0,w
  1388  0286  3E40               	addlw	_nServo&0ffh
  1389  0287  0084               	movwf	fsr0
  1390  0288  3070               	movlw	low(01770h)
  1391  0289  1383               	bcf	status, 7	;select IRP bank0
  1392  028A  0080               	movwf	indf
  1393  028B  0A84               	incf	fsr0,f
  1394  028C  3017               	movlw	high(01770h)
  1395  028D  0080               	movwf	indf
  1396                           	line	18
  1397                           ;MSPDecode.c: 18: nPWM[i] = nServo[i];
  1398  028E  0866               	movf	(setup@i),w
  1399  028F  00E2               	movwf	(??_setup+0)+0
  1400  0290  0762               	addwf	(??_setup+0)+0,w
  1401  0291  3E40               	addlw	_nServo&0ffh
  1402  0292  0084               	movwf	fsr0
  1403  0293  0800               	movf	indf,w
  1404  0294  00E3               	movwf	(??_setup+1)+0+0
  1405  0295  0A84               	incf	fsr0,f
  1406  0296  0800               	movf	indf,w
  1407  0297  00E4               	movwf	(??_setup+1)+0+1
  1408  0298  0866               	movf	(setup@i),w
  1409  0299  00E5               	movwf	(??_setup+3)+0
  1410  029A  0765               	addwf	(??_setup+3)+0,w
  1411  029B  3E4A               	addlw	_nPWM&0ffh
  1412  029C  0084               	movwf	fsr0
  1413  029D  0863               	movf	0+(??_setup+1)+0,w
  1414  029E  0080               	movwf	indf
  1415  029F  0A84               	incf	fsr0,f
  1416  02A0  0864               	movf	1+(??_setup+1)+0,w
  1417  02A1  0080               	movwf	indf
  1418                           	line	16
  1419                           	
  1420  02A2                     l5736:	
  1421  02A2  3001               	movlw	(01h)
  1422  02A3  00E2               	movwf	(??_setup+0)+0
  1423  02A4  0862               	movf	(??_setup+0)+0,w
  1424  02A5  07E6               	addwf	(setup@i),f
  1425                           	
  1426  02A6                     l5738:	
  1427  02A6  3002               	movlw	(02h)
  1428  02A7  0266               	subwf	(setup@i),w
  1429  02A8  1C03               	skipc
  1430  02A9  2AAB               	goto	u3621
  1431  02AA  2AAC               	goto	u3620
  1432  02AB                     u3621:
  1433  02AB  2A83               	goto	l5734
  1434  02AC                     u3620:
  1435  02AC  2AAD               	goto	l5740
  1436                           	
  1437  02AD                     l1757:	
  1438                           	line	21
  1439                           	
  1440  02AD                     l5740:	
  1441                           ;MSPDecode.c: 19: }
  1442                           ;MSPDecode.c: 21: TMR1H = 0xFF;
  1443  02AD  30FF               	movlw	(0FFh)
  1444  02AE  008F               	movwf	(15)	;volatile
  1445                           	line	22
  1446                           ;MSPDecode.c: 22: TMR1L = 0xFF;
  1447  02AF  30FF               	movlw	(0FFh)
  1448  02B0  008E               	movwf	(14)	;volatile
  1449                           	line	23
  1450                           	
  1451  02B1                     l5742:	
  1452                           ;MSPDecode.c: 23: TMR1ON = 1;
  1453  02B1  1410               	bsf	(128/8),(128)&7
  1454                           	line	24
  1455                           	
  1456  02B2                     l5744:	
  1457                           ;MSPDecode.c: 24: SetSendingPWM();
  1458  02B2  118A  22C9  118A   	fcall	_SetSendingPWM
  1459                           	line	26
  1460                           	
  1461  02B5                     l5746:	
  1462                           ;MSPDecode.c: 26: GetTimesHeartBeat();
  1463  02B5  118A  2422  118A   	fcall	_GetTimesHeartBeat
  1464                           	line	28
  1465                           	
  1466  02B8                     l5748:	
  1467                           ;MSPDecode.c: 28: delay(250000);
  1468  02B8  3000               	movlw	0
  1469  02B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1470  02BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1471  02BB  00DD               	movwf	(?_delay+3)
  1472  02BC  3003               	movlw	03h
  1473  02BD  00DC               	movwf	(?_delay+2)
  1474  02BE  30D0               	movlw	0D0h
  1475  02BF  00DB               	movwf	(?_delay+1)
  1476  02C0  3090               	movlw	090h
  1477  02C1  00DA               	movwf	(?_delay)
  1478                           
  1479  02C2  118A  2347  118A   	fcall	_delay
  1480                           	line	30
  1481                           	
  1482  02C5                     l5750:	
  1483                           ;MSPDecode.c: 30: RC3 = 1;
  1484  02C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1485  02C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1486  02C7  1587               	bsf	(59/8),(59)&7
  1487                           	line	31
  1488                           	
  1489  02C8                     l1758:	
  1490  02C8  0008               	return
  1491                           	opt stack 0
  1492                           GLOBAL	__end_of_setup
  1493  02C9                     	__end_of_setup:
  1494 ;; =============== function _setup ends ============
  1495                           
  1496                           	signat	_setup,88
  1497                           	global	_evaluateCommand
  1498                           psect	text670,local,class=CODE,delta=2
  1499                           global __ptext670
  1500  0013                     __ptext670:
  1501                           
  1502 ;; *************** function _evaluateCommand *****************
  1503 ;; Defined at:
  1504 ;;		line 92 in file "MSPDecode.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  c               1    wreg     unsigned char 
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  c               1    2[BANK0 ] unsigned char 
  1509 ;;  nChannel        2    7[BANK0 ] int 
  1510 ;;  nEncode         2    9[BANK0 ] unsigned int 
  1511 ;;  nEncodeHigh     2    5[BANK0 ] unsigned int 
  1512 ;;  nEncodeLow      2    3[BANK0 ] unsigned int 
  1513 ;;  cTemp           1   11[BANK0 ] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;		None               void
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1523 ;;      Params:         0       0       0       0
  1524 ;;      Locals:         0      10       0       0
  1525 ;;      Temps:          0       2       0       0
  1526 ;;      Totals:         0      12       0       0
  1527 ;;Total ram usage:       12 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    3
  1530 ;; This function calls:
  1531 ;;		_read8
  1532 ;; This function is called by:
  1533 ;;		_serialCom
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           psect	text670
  1537                           	file	"MSPDecode.c"
  1538                           	line	92
  1539                           	global	__size_of_evaluateCommand
  1540  00F6                     	__size_of_evaluateCommand	equ	__end_of_evaluateCommand-_evaluateCommand
  1541                           	
  1542  0013                     _evaluateCommand:	
  1543                           	opt	stack 3
  1544                           ; Regs used in _evaluateCommand: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1545                           ;evaluateCommand@c stored from wreg
  1546  0013  1283               	bcf	status, 5	;RP0=0, select bank0
  1547  0014  1303               	bcf	status, 6	;RP1=0, select bank0
  1548  0015  00DC               	movwf	(evaluateCommand@c)
  1549                           	line	93
  1550                           	
  1551  0016                     l5660:	
  1552                           ;MSPDecode.c: 93: unsigned char cTemp = 0x00;
  1553  0016  01E5               	clrf	(evaluateCommand@cTemp)
  1554                           	line	98
  1555                           ;MSPDecode.c: 98: switch (c) {
  1556  0017  28EE               	goto	l5720
  1557                           	line	99
  1558                           ;MSPDecode.c: 99: case 10:
  1559                           	
  1560  0018                     l1799:	
  1561                           	line	100
  1562                           	
  1563  0018                     l5662:	
  1564                           ;MSPDecode.c: 100: cStatePWM0 = read8();
  1565  0018  118A  245E  118A   	fcall	_read8
  1566  001B  1283               	bcf	status, 5	;RP0=0, select bank0
  1567  001C  1303               	bcf	status, 6	;RP1=0, select bank0
  1568  001D  00DA               	movwf	(??_evaluateCommand+0)+0
  1569  001E  085A               	movf	(??_evaluateCommand+0)+0,w
  1570  001F  00D2               	movwf	(_cStatePWM0)
  1571                           	line	101
  1572                           ;MSPDecode.c: 101: break;
  1573  0020  2908               	goto	l1822
  1574                           	line	102
  1575                           ;MSPDecode.c: 102: case 11:
  1576                           	
  1577  0021                     l1801:	
  1578                           	line	103
  1579                           	
  1580  0021                     l5664:	
  1581                           ;MSPDecode.c: 103: cTemp = read8();
  1582  0021  118A  245E  118A   	fcall	_read8
  1583  0024  1283               	bcf	status, 5	;RP0=0, select bank0
  1584  0025  1303               	bcf	status, 6	;RP1=0, select bank0
  1585  0026  00DA               	movwf	(??_evaluateCommand+0)+0
  1586  0027  085A               	movf	(??_evaluateCommand+0)+0,w
  1587  0028  00E5               	movwf	(evaluateCommand@cTemp)
  1588                           	line	104
  1589                           	
  1590  0029                     l5666:	
  1591                           ;MSPDecode.c: 104: if (cTemp == 0)
  1592  0029  08E5               	movf	(evaluateCommand@cTemp),f
  1593  002A  1D03               	skipz
  1594  002B  282D               	goto	u3521
  1595  002C  282E               	goto	u3520
  1596  002D                     u3521:
  1597  002D  2830               	goto	l1802
  1598  002E                     u3520:
  1599                           	line	105
  1600                           	
  1601  002E                     l5668:	
  1602                           ;MSPDecode.c: 105: RC2 = 0;
  1603  002E  1107               	bcf	(58/8),(58)&7
  1604  002F  2908               	goto	l1822
  1605                           	line	106
  1606                           	
  1607  0030                     l1802:	
  1608                           	line	107
  1609                           ;MSPDecode.c: 106: else
  1610                           ;MSPDecode.c: 107: RC2 = 1;
  1611  0030  1507               	bsf	(58/8),(58)&7
  1612  0031  2908               	goto	l1822
  1613                           	
  1614  0032                     l1803:	
  1615                           	line	108
  1616                           ;MSPDecode.c: 108: break;
  1617  0032  2908               	goto	l1822
  1618                           	line	109
  1619                           ;MSPDecode.c: 109: case 12:
  1620                           	
  1621  0033                     l1804:	
  1622                           	line	110
  1623                           	
  1624  0033                     l5670:	
  1625                           ;MSPDecode.c: 110: cTemp = read8();
  1626  0033  118A  245E  118A   	fcall	_read8
  1627  0036  1283               	bcf	status, 5	;RP0=0, select bank0
  1628  0037  1303               	bcf	status, 6	;RP1=0, select bank0
  1629  0038  00DA               	movwf	(??_evaluateCommand+0)+0
  1630  0039  085A               	movf	(??_evaluateCommand+0)+0,w
  1631  003A  00E5               	movwf	(evaluateCommand@cTemp)
  1632                           	line	111
  1633                           	
  1634  003B                     l5672:	
  1635                           ;MSPDecode.c: 111: if (cTemp == 0)
  1636  003B  08E5               	movf	(evaluateCommand@cTemp),f
  1637  003C  1D03               	skipz
  1638  003D  283F               	goto	u3531
  1639  003E  2840               	goto	u3530
  1640  003F                     u3531:
  1641  003F  2842               	goto	l1805
  1642  0040                     u3530:
  1643                           	line	112
  1644                           	
  1645  0040                     l5674:	
  1646                           ;MSPDecode.c: 112: RC1 = 0;
  1647  0040  1087               	bcf	(57/8),(57)&7
  1648  0041  2908               	goto	l1822
  1649                           	line	113
  1650                           	
  1651  0042                     l1805:	
  1652                           	line	114
  1653                           ;MSPDecode.c: 113: else
  1654                           ;MSPDecode.c: 114: RC1 = 1;
  1655  0042  1487               	bsf	(57/8),(57)&7
  1656  0043  2908               	goto	l1822
  1657                           	
  1658  0044                     l1806:	
  1659                           	line	115
  1660                           ;MSPDecode.c: 115: break;
  1661  0044  2908               	goto	l1822
  1662                           	line	116
  1663                           ;MSPDecode.c: 116: case 13:
  1664                           	
  1665  0045                     l1807:	
  1666                           	line	117
  1667                           	
  1668  0045                     l5676:	
  1669                           ;MSPDecode.c: 117: cTemp = read8();
  1670  0045  118A  245E  118A   	fcall	_read8
  1671  0048  1283               	bcf	status, 5	;RP0=0, select bank0
  1672  0049  1303               	bcf	status, 6	;RP1=0, select bank0
  1673  004A  00DA               	movwf	(??_evaluateCommand+0)+0
  1674  004B  085A               	movf	(??_evaluateCommand+0)+0,w
  1675  004C  00E5               	movwf	(evaluateCommand@cTemp)
  1676                           	line	118
  1677                           	
  1678  004D                     l5678:	
  1679                           ;MSPDecode.c: 118: if (cTemp == 0)
  1680  004D  08E5               	movf	(evaluateCommand@cTemp),f
  1681  004E  1D03               	skipz
  1682  004F  2851               	goto	u3541
  1683  0050  2852               	goto	u3540
  1684  0051                     u3541:
  1685  0051  2854               	goto	l1808
  1686  0052                     u3540:
  1687                           	line	119
  1688                           	
  1689  0052                     l5680:	
  1690                           ;MSPDecode.c: 119: RC0 = 0;
  1691  0052  1007               	bcf	(56/8),(56)&7
  1692  0053  2908               	goto	l1822
  1693                           	line	120
  1694                           	
  1695  0054                     l1808:	
  1696                           	line	121
  1697                           ;MSPDecode.c: 120: else
  1698                           ;MSPDecode.c: 121: RC0 = 1;
  1699  0054  1407               	bsf	(56/8),(56)&7
  1700  0055  2908               	goto	l1822
  1701                           	
  1702  0056                     l1809:	
  1703                           	line	122
  1704                           ;MSPDecode.c: 122: break;
  1705  0056  2908               	goto	l1822
  1706                           	line	123
  1707                           ;MSPDecode.c: 123: case 14:
  1708                           	
  1709  0057                     l1810:	
  1710                           	line	124
  1711                           	
  1712  0057                     l5682:	
  1713                           ;MSPDecode.c: 124: cTemp = read8();
  1714  0057  118A  245E  118A   	fcall	_read8
  1715  005A  1283               	bcf	status, 5	;RP0=0, select bank0
  1716  005B  1303               	bcf	status, 6	;RP1=0, select bank0
  1717  005C  00DA               	movwf	(??_evaluateCommand+0)+0
  1718  005D  085A               	movf	(??_evaluateCommand+0)+0,w
  1719  005E  00E5               	movwf	(evaluateCommand@cTemp)
  1720                           	line	125
  1721                           	
  1722  005F                     l5684:	
  1723                           ;MSPDecode.c: 125: if (cTemp == 0)
  1724  005F  08E5               	movf	(evaluateCommand@cTemp),f
  1725  0060  1D03               	skipz
  1726  0061  2863               	goto	u3551
  1727  0062  2864               	goto	u3550
  1728  0063                     u3551:
  1729  0063  2866               	goto	l1811
  1730  0064                     u3550:
  1731                           	line	126
  1732                           	
  1733  0064                     l5686:	
  1734                           ;MSPDecode.c: 126: RA2 = 0;
  1735  0064  1105               	bcf	(42/8),(42)&7
  1736  0065  2908               	goto	l1822
  1737                           	line	127
  1738                           	
  1739  0066                     l1811:	
  1740                           	line	128
  1741                           ;MSPDecode.c: 127: else
  1742                           ;MSPDecode.c: 128: RA2 = 1;
  1743  0066  1505               	bsf	(42/8),(42)&7
  1744  0067  2908               	goto	l1822
  1745                           	
  1746  0068                     l1812:	
  1747                           	line	129
  1748                           ;MSPDecode.c: 129: break;
  1749  0068  2908               	goto	l1822
  1750                           	line	130
  1751                           ;MSPDecode.c: 130: case 15:
  1752                           	
  1753  0069                     l1813:	
  1754                           	line	131
  1755                           	
  1756  0069                     l5688:	
  1757                           ;MSPDecode.c: 131: cTemp = read8();
  1758  0069  118A  245E  118A   	fcall	_read8
  1759  006C  1283               	bcf	status, 5	;RP0=0, select bank0
  1760  006D  1303               	bcf	status, 6	;RP1=0, select bank0
  1761  006E  00DA               	movwf	(??_evaluateCommand+0)+0
  1762  006F  085A               	movf	(??_evaluateCommand+0)+0,w
  1763  0070  00E5               	movwf	(evaluateCommand@cTemp)
  1764                           	line	132
  1765                           	
  1766  0071                     l5690:	
  1767                           ;MSPDecode.c: 132: if (cTemp == 0)
  1768  0071  08E5               	movf	(evaluateCommand@cTemp),f
  1769  0072  1D03               	skipz
  1770  0073  2875               	goto	u3561
  1771  0074  2876               	goto	u3560
  1772  0075                     u3561:
  1773  0075  2878               	goto	l1814
  1774  0076                     u3560:
  1775                           	line	133
  1776                           	
  1777  0076                     l5692:	
  1778                           ;MSPDecode.c: 133: RA1 = 0;
  1779  0076  1085               	bcf	(41/8),(41)&7
  1780  0077  2908               	goto	l1822
  1781                           	line	134
  1782                           	
  1783  0078                     l1814:	
  1784                           	line	135
  1785                           ;MSPDecode.c: 134: else
  1786                           ;MSPDecode.c: 135: RA1 = 1;
  1787  0078  1485               	bsf	(41/8),(41)&7
  1788  0079  2908               	goto	l1822
  1789                           	
  1790  007A                     l1815:	
  1791                           	line	136
  1792                           ;MSPDecode.c: 136: break;
  1793  007A  2908               	goto	l1822
  1794                           	line	137
  1795                           ;MSPDecode.c: 137: case 16:
  1796                           	
  1797  007B                     l1816:	
  1798                           	line	138
  1799                           	
  1800  007B                     l5694:	
  1801                           ;MSPDecode.c: 138: cTemp = read8();
  1802  007B  118A  245E  118A   	fcall	_read8
  1803  007E  1283               	bcf	status, 5	;RP0=0, select bank0
  1804  007F  1303               	bcf	status, 6	;RP1=0, select bank0
  1805  0080  00DA               	movwf	(??_evaluateCommand+0)+0
  1806  0081  085A               	movf	(??_evaluateCommand+0)+0,w
  1807  0082  00E5               	movwf	(evaluateCommand@cTemp)
  1808                           	line	139
  1809                           	
  1810  0083                     l5696:	
  1811                           ;MSPDecode.c: 139: if (cTemp == 0)
  1812  0083  08E5               	movf	(evaluateCommand@cTemp),f
  1813  0084  1D03               	skipz
  1814  0085  2887               	goto	u3571
  1815  0086  2888               	goto	u3570
  1816  0087                     u3571:
  1817  0087  288A               	goto	l1817
  1818  0088                     u3570:
  1819                           	line	140
  1820                           	
  1821  0088                     l5698:	
  1822                           ;MSPDecode.c: 140: RA0 = 0;
  1823  0088  1005               	bcf	(40/8),(40)&7
  1824  0089  2908               	goto	l1822
  1825                           	line	141
  1826                           	
  1827  008A                     l1817:	
  1828                           	line	142
  1829                           ;MSPDecode.c: 141: else
  1830                           ;MSPDecode.c: 142: RA0 = 1;
  1831  008A  1405               	bsf	(40/8),(40)&7
  1832  008B  2908               	goto	l1822
  1833                           	
  1834  008C                     l1818:	
  1835                           	line	143
  1836                           ;MSPDecode.c: 143: break;
  1837  008C  2908               	goto	l1822
  1838                           	line	144
  1839                           ;MSPDecode.c: 144: case 220:
  1840                           	
  1841  008D                     l1819:	
  1842                           	line	146
  1843                           	
  1844  008D                     l5700:	
  1845                           ;MSPDecode.c: 145: {
  1846                           ;MSPDecode.c: 146: unsigned int nEncodeLow = 0, nEncodeHigh = 0, nEncode = 0;
  1847  008D  01DD               	clrf	(evaluateCommand@nEncodeLow)
  1848  008E  01DE               	clrf	(evaluateCommand@nEncodeLow+1)
  1849  008F  01DF               	clrf	(evaluateCommand@nEncodeHigh)
  1850  0090  01E0               	clrf	(evaluateCommand@nEncodeHigh+1)
  1851  0091  01E3               	clrf	(evaluateCommand@nEncode)
  1852  0092  01E4               	clrf	(evaluateCommand@nEncode+1)
  1853                           	line	150
  1854                           ;MSPDecode.c: 150: for (int nChannel = 0; nChannel < 2; nChannel++) {
  1855  0093  01E1               	clrf	(evaluateCommand@nChannel)
  1856  0094  01E2               	clrf	(evaluateCommand@nChannel+1)
  1857                           	
  1858  0095                     l5702:	
  1859  0095  0862               	movf	(evaluateCommand@nChannel+1),w
  1860  0096  3A80               	xorlw	80h
  1861  0097  00FF               	movwf	btemp+1
  1862  0098  3080               	movlw	(high(02h))^80h
  1863  0099  027F               	subwf	btemp+1,w
  1864  009A  1D03               	skipz
  1865  009B  289E               	goto	u3585
  1866  009C  3002               	movlw	low(02h)
  1867  009D  0261               	subwf	(evaluateCommand@nChannel),w
  1868  009E                     u3585:
  1869                           
  1870  009E  1C03               	skipc
  1871  009F  28A1               	goto	u3581
  1872  00A0  28A2               	goto	u3580
  1873  00A1                     u3581:
  1874  00A1  28A4               	goto	l5706
  1875  00A2                     u3580:
  1876  00A2  28CE               	goto	l5712
  1877                           	
  1878  00A3                     l5704:	
  1879  00A3  28CE               	goto	l5712
  1880                           	
  1881  00A4                     l1820:	
  1882                           	line	151
  1883                           	
  1884  00A4                     l5706:	
  1885                           ;MSPDecode.c: 151: nEncodeLow = read8();
  1886  00A4  118A  245E  118A   	fcall	_read8
  1887  00A7  1283               	bcf	status, 5	;RP0=0, select bank0
  1888  00A8  1303               	bcf	status, 6	;RP1=0, select bank0
  1889  00A9  00DA               	movwf	(??_evaluateCommand+0)+0
  1890  00AA  01DB               	clrf	(??_evaluateCommand+0)+0+1
  1891  00AB  085A               	movf	0+(??_evaluateCommand+0)+0,w
  1892  00AC  00DD               	movwf	(evaluateCommand@nEncodeLow)
  1893  00AD  085B               	movf	1+(??_evaluateCommand+0)+0,w
  1894  00AE  00DE               	movwf	(evaluateCommand@nEncodeLow+1)
  1895                           	line	152
  1896                           ;MSPDecode.c: 152: nEncodeHigh = read8();
  1897  00AF  118A  245E  118A   	fcall	_read8
  1898  00B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1899  00B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1900  00B4  00DA               	movwf	(??_evaluateCommand+0)+0
  1901  00B5  01DB               	clrf	(??_evaluateCommand+0)+0+1
  1902  00B6  085A               	movf	0+(??_evaluateCommand+0)+0,w
  1903  00B7  00DF               	movwf	(evaluateCommand@nEncodeHigh)
  1904  00B8  085B               	movf	1+(??_evaluateCommand+0)+0,w
  1905  00B9  00E0               	movwf	(evaluateCommand@nEncodeHigh+1)
  1906                           	line	150
  1907                           	
  1908  00BA                     l5708:	
  1909  00BA  3001               	movlw	low(01h)
  1910  00BB  07E1               	addwf	(evaluateCommand@nChannel),f
  1911  00BC  1803               	skipnc
  1912  00BD  0AE2               	incf	(evaluateCommand@nChannel+1),f
  1913  00BE  3000               	movlw	high(01h)
  1914  00BF  07E2               	addwf	(evaluateCommand@nChannel+1),f
  1915                           	
  1916  00C0                     l5710:	
  1917  00C0  0862               	movf	(evaluateCommand@nChannel+1),w
  1918  00C1  3A80               	xorlw	80h
  1919  00C2  00FF               	movwf	btemp+1
  1920  00C3  3080               	movlw	(high(02h))^80h
  1921  00C4  027F               	subwf	btemp+1,w
  1922  00C5  1D03               	skipz
  1923  00C6  28C9               	goto	u3595
  1924  00C7  3002               	movlw	low(02h)
  1925  00C8  0261               	subwf	(evaluateCommand@nChannel),w
  1926  00C9                     u3595:
  1927                           
  1928  00C9  1C03               	skipc
  1929  00CA  28CC               	goto	u3591
  1930  00CB  28CD               	goto	u3590
  1931  00CC                     u3591:
  1932  00CC  28A4               	goto	l5706
  1933  00CD                     u3590:
  1934  00CD  28CE               	goto	l5712
  1935                           	
  1936  00CE                     l1821:	
  1937                           	line	154
  1938                           	
  1939  00CE                     l5712:	
  1940                           ;MSPDecode.c: 153: }
  1941                           ;MSPDecode.c: 154: nEncode = (nEncodeHigh << 8) | nEncodeLow;
  1942  00CE  1283               	bcf	status, 5	;RP0=0, select bank0
  1943  00CF  1303               	bcf	status, 6	;RP1=0, select bank0
  1944  00D0  085F               	movf	(evaluateCommand@nEncodeHigh),w
  1945  00D1  00DB               	movwf	(??_evaluateCommand+0)+0+1
  1946  00D2  01DA               	clrf	(??_evaluateCommand+0)+0
  1947  00D3  085D               	movf	(evaluateCommand@nEncodeLow),w
  1948  00D4  045A               	iorwf	0+(??_evaluateCommand+0)+0,w
  1949  00D5  00E3               	movwf	(evaluateCommand@nEncode)
  1950  00D6  085E               	movf	(evaluateCommand@nEncodeLow+1),w
  1951  00D7  045B               	iorwf	1+(??_evaluateCommand+0)+0,w
  1952  00D8  00E4               	movwf	1+(evaluateCommand@nEncode)
  1953                           	line	155
  1954                           ;MSPDecode.c: 155: nEncode <<= 2;
  1955  00D9  3002               	movlw	02h
  1956                           	
  1957  00DA                     u3605:
  1958  00DA  1003               	clrc
  1959  00DB  0DE3               	rlf	(evaluateCommand@nEncode),f
  1960  00DC  0DE4               	rlf	(evaluateCommand@nEncode+1),f
  1961  00DD  3EFF               	addlw	-1
  1962  00DE  1D03               	skipz
  1963  00DF  28DA               	goto	u3605
  1964                           	line	156
  1965                           	
  1966  00E0                     l5714:	
  1967                           ;MSPDecode.c: 156: nServo[0] = nEncode;
  1968  00E0  0864               	movf	(evaluateCommand@nEncode+1),w
  1969  00E1  01C1               	clrf	(_nServo+1)
  1970  00E2  07C1               	addwf	(_nServo+1)
  1971  00E3  0863               	movf	(evaluateCommand@nEncode),w
  1972  00E4  01C0               	clrf	(_nServo)
  1973  00E5  07C0               	addwf	(_nServo)
  1974                           
  1975                           	line	157
  1976                           	
  1977  00E6                     l5716:	
  1978                           ;MSPDecode.c: 157: nServo[1] = nEncode;
  1979  00E6  0864               	movf	(evaluateCommand@nEncode+1),w
  1980  00E7  01C3               	clrf	1+(_nServo)+02h
  1981  00E8  07C3               	addwf	1+(_nServo)+02h
  1982  00E9  0863               	movf	(evaluateCommand@nEncode),w
  1983  00EA  01C2               	clrf	0+(_nServo)+02h
  1984  00EB  07C2               	addwf	0+(_nServo)+02h
  1985                           
  1986                           	line	165
  1987                           ;MSPDecode.c: 164: }
  1988                           ;MSPDecode.c: 165: break;
  1989  00EC  2908               	goto	l1822
  1990                           	line	166
  1991                           	
  1992  00ED                     l5718:	
  1993                           ;MSPDecode.c: 166: }
  1994  00ED  2908               	goto	l1822
  1995                           	line	98
  1996                           	
  1997  00EE                     l1798:	
  1998                           	
  1999  00EE                     l5720:	
  2000  00EE  085C               	movf	(evaluateCommand@c),w
  2001                           	; Switch size 1, requested type "space"
  2002                           ; Number of cases is 8, Range of values is 10 to 220
  2003                           ; switch strategies available:
  2004                           ; Name         Instructions Cycles
  2005                           ; simple_byte           25    13 (average)
  2006                           ; jumptable            263     9 (fixed)
  2007                           ;	Chosen strategy is simple_byte
  2008                           
  2009                           	opt asmopt_off
  2010  00EF  3A0A               	xorlw	10^0	; case 10
  2011  00F0  1903               	skipnz
  2012  00F1  2818               	goto	l5662
  2013  00F2  3A01               	xorlw	11^10	; case 11
  2014  00F3  1903               	skipnz
  2015  00F4  2821               	goto	l5664
  2016  00F5  3A07               	xorlw	12^11	; case 12
  2017  00F6  1903               	skipnz
  2018  00F7  2833               	goto	l5670
  2019  00F8  3A01               	xorlw	13^12	; case 13
  2020  00F9  1903               	skipnz
  2021  00FA  2845               	goto	l5676
  2022  00FB  3A03               	xorlw	14^13	; case 14
  2023  00FC  1903               	skipnz
  2024  00FD  2857               	goto	l5682
  2025  00FE  3A01               	xorlw	15^14	; case 15
  2026  00FF  1903               	skipnz
  2027  0100  2869               	goto	l5688
  2028  0101  3A1F               	xorlw	16^15	; case 16
  2029  0102  1903               	skipnz
  2030  0103  287B               	goto	l5694
  2031  0104  3ACC               	xorlw	220^16	; case 220
  2032  0105  1903               	skipnz
  2033  0106  288D               	goto	l5700
  2034  0107  2908               	goto	l1822
  2035                           	opt asmopt_on
  2036                           
  2037                           	line	166
  2038                           	
  2039  0108                     l1800:	
  2040                           	line	169
  2041                           	
  2042  0108                     l1822:	
  2043  0108  0008               	return
  2044                           	opt stack 0
  2045                           GLOBAL	__end_of_evaluateCommand
  2046  0109                     	__end_of_evaluateCommand:
  2047 ;; =============== function _evaluateCommand ends ============
  2048                           
  2049                           	signat	_evaluateCommand,4216
  2050                           	global	_SendLine
  2051                           psect	text671,local,class=CODE,delta=2
  2052                           global __ptext671
  2053  03E9                     __ptext671:
  2054                           
  2055 ;; *************** function _SendLine *****************
  2056 ;; Defined at:
  2057 ;;		line 145 in file "Board/InterfaceV4.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  tcString        1    wreg     PTR const unsigned char 
  2060 ;;		 -> STR_1(12), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  tcString        1    4[BANK0 ] PTR const unsigned char 
  2063 ;;		 -> STR_1(12), 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2073 ;;      Params:         0       0       0       0
  2074 ;;      Locals:         0       1       0       0
  2075 ;;      Temps:          0       0       0       0
  2076 ;;      Totals:         0       1       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_SendString
  2082 ;; This function is called by:
  2083 ;;		_setup
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           psect	text671
  2087                           	file	"Board/InterfaceV4.c"
  2088                           	line	145
  2089                           	global	__size_of_SendLine
  2090  001D                     	__size_of_SendLine	equ	__end_of_SendLine-_SendLine
  2091                           	
  2092  03E9                     _SendLine:	
  2093                           	opt	stack 3
  2094                           ; Regs used in _SendLine: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2095                           ;SendLine@tcString stored from wreg
  2096  03E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2097  03EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2098  03EB  00DE               	movwf	(SendLine@tcString)
  2099                           	line	146
  2100                           	
  2101  03EC                     l5654:	
  2102                           ;InterfaceV4.c: 146: SendString(tcString);
  2103  03EC  085E               	movf	(SendLine@tcString),w
  2104  03ED  00DA               	movwf	(?_SendString)
  2105  03EE  3080               	movlw	80h
  2106  03EF  00DB               	movwf	(?_SendString+1)
  2107  03F0  118A  2379  118A   	fcall	_SendString
  2108                           	line	147
  2109                           ;InterfaceV4.c: 147: while (!TRMT);
  2110  03F3  2BF4               	goto	l1157
  2111                           	
  2112  03F4                     l1158:	
  2113                           	
  2114  03F4                     l1157:	
  2115  03F4  1283               	bcf	status, 5	;RP0=0, select bank0
  2116  03F5  1303               	bcf	status, 6	;RP1=0, select bank0
  2117  03F6  1C96               	btfss	(177/8),(177)&7
  2118  03F7  2BF9               	goto	u3501
  2119  03F8  2BFA               	goto	u3500
  2120  03F9                     u3501:
  2121  03F9  2BF4               	goto	l1157
  2122  03FA                     u3500:
  2123  03FA  2BFB               	goto	l5656
  2124                           	
  2125  03FB                     l1159:	
  2126                           	line	148
  2127                           	
  2128  03FB                     l5656:	
  2129                           ;InterfaceV4.c: 148: TXREG = 0x0D;
  2130  03FB  300D               	movlw	(0Dh)
  2131  03FC  0095               	movwf	(21)	;volatile
  2132                           	line	149
  2133                           ;InterfaceV4.c: 149: while (!TRMT);
  2134  03FD  2BFE               	goto	l1160
  2135                           	
  2136  03FE                     l1161:	
  2137                           	
  2138  03FE                     l1160:	
  2139  03FE  1C96               	btfss	(177/8),(177)&7
  2140  03FF  2C01               	goto	u3511
  2141  0400  2C02               	goto	u3510
  2142  0401                     u3511:
  2143  0401  2BFE               	goto	l1160
  2144  0402                     u3510:
  2145  0402  2C03               	goto	l5658
  2146                           	
  2147  0403                     l1162:	
  2148                           	line	150
  2149                           	
  2150  0403                     l5658:	
  2151                           ;InterfaceV4.c: 150: TXREG = 0x0A;
  2152  0403  300A               	movlw	(0Ah)
  2153  0404  0095               	movwf	(21)	;volatile
  2154                           	line	151
  2155                           	
  2156  0405                     l1163:	
  2157  0405  0008               	return
  2158                           	opt stack 0
  2159                           GLOBAL	__end_of_SendLine
  2160  0406                     	__end_of_SendLine:
  2161 ;; =============== function _SendLine ends ============
  2162                           
  2163                           	signat	_SendLine,4216
  2164                           	global	_read8
  2165                           psect	text672,local,class=CODE,delta=2
  2166                           global __ptext672
  2167  045E                     __ptext672:
  2168                           
  2169 ;; *************** function _read8 *****************
  2170 ;; Defined at:
  2171 ;;		line 171 in file "MSPDecode.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      unsigned char 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2185 ;;      Params:         0       0       0       0
  2186 ;;      Locals:         0       0       0       0
  2187 ;;      Temps:          0       0       0       0
  2188 ;;      Totals:         0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    2
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_evaluateCommand
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           psect	text672
  2199                           	file	"MSPDecode.c"
  2200                           	line	171
  2201                           	global	__size_of_read8
  2202  000C                     	__size_of_read8	equ	__end_of_read8-_read8
  2203                           	
  2204  045E                     _read8:	
  2205                           	opt	stack 3
  2206                           ; Regs used in _read8: [wreg-fsr0h+status,2+status,0]
  2207                           	line	172
  2208                           	
  2209  045E                     l5650:	
  2210                           ;MSPDecode.c: 172: return inBuf[indRX++]&0xff;
  2211  045E  3001               	movlw	01h
  2212  045F  1283               	bcf	status, 5	;RP0=0, select bank0
  2213  0460  1303               	bcf	status, 6	;RP1=0, select bank0
  2214  0461  07D6               	addwf	(_indRX),f
  2215  0462  30FF               	movlw	-01h
  2216  0463  0756               	addwf	(_indRX),w
  2217  0464  3EA0               	addlw	_inBuf&0ffh
  2218  0465  0084               	movwf	fsr0
  2219  0466  1383               	bcf	status, 7	;select IRP bank1
  2220  0467  0800               	movf	indf,w
  2221  0468  2C69               	goto	l1825
  2222                           	
  2223  0469                     l5652:	
  2224                           	line	173
  2225                           	
  2226  0469                     l1825:	
  2227  0469  0008               	return
  2228                           	opt stack 0
  2229                           GLOBAL	__end_of_read8
  2230  046A                     	__end_of_read8:
  2231 ;; =============== function _read8 ends ============
  2232                           
  2233                           	signat	_read8,89
  2234                           	global	_SerialAvailable
  2235                           psect	text673,local,class=CODE,delta=2
  2236                           global __ptext673
  2237  0487                     __ptext673:
  2238                           
  2239 ;; *************** function _SerialAvailable *****************
  2240 ;; Defined at:
  2241 ;;		line 206 in file "Board/InterfaceV4.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      unsigned char 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2255 ;;      Params:         0       0       0       0
  2256 ;;      Locals:         0       0       0       0
  2257 ;;      Temps:          0       0       0       0
  2258 ;;      Totals:         0       0       0       0
  2259 ;;Total ram usage:        0 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    2
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_serialCom
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           psect	text673
  2269                           	file	"Board/InterfaceV4.c"
  2270                           	line	206
  2271                           	global	__size_of_SerialAvailable
  2272  0006                     	__size_of_SerialAvailable	equ	__end_of_SerialAvailable-_SerialAvailable
  2273                           	
  2274  0487                     _SerialAvailable:	
  2275                           	opt	stack 4
  2276                           ; Regs used in _SerialAvailable: [wreg+status,2+status,0]
  2277                           	line	207
  2278                           	
  2279  0487                     l5646:	
  2280                           ;InterfaceV4.c: 207: return ((unsigned char) (serialHeadRX - serialTailRX)) % 32;
  2281  0487  0374               	decf	(_serialTailRX),w	;volatile
  2282  0488  3AFF               	xorlw	0ffh
  2283  0489  0773               	addwf	(_serialHeadRX),w	;volatile
  2284  048A  391F               	andlw	01Fh
  2285  048B  2C8C               	goto	l1183
  2286                           	
  2287  048C                     l5648:	
  2288                           	line	208
  2289                           	
  2290  048C                     l1183:	
  2291  048C  0008               	return
  2292                           	opt stack 0
  2293                           GLOBAL	__end_of_SerialAvailable
  2294  048D                     	__end_of_SerialAvailable:
  2295 ;; =============== function _SerialAvailable ends ============
  2296                           
  2297                           	signat	_SerialAvailable,89
  2298                           	global	_SerialRead
  2299                           psect	text674,local,class=CODE,delta=2
  2300                           global __ptext674
  2301  03C8                     __ptext674:
  2302                           
  2303 ;; *************** function _SerialRead *****************
  2304 ;; Defined at:
  2305 ;;		line 193 in file "Board/InterfaceV4.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  cResult         1    1[BANK0 ] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      unsigned char 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2319 ;;      Params:         0       0       0       0
  2320 ;;      Locals:         0       1       0       0
  2321 ;;      Temps:          0       1       0       0
  2322 ;;      Totals:         0       2       0       0
  2323 ;;Total ram usage:        2 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_serialCom
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           psect	text674
  2333                           	file	"Board/InterfaceV4.c"
  2334                           	line	193
  2335                           	global	__size_of_SerialRead
  2336  0021                     	__size_of_SerialRead	equ	__end_of_SerialRead-_SerialRead
  2337                           	
  2338  03C8                     _SerialRead:	
  2339                           	opt	stack 4
  2340                           ; Regs used in _SerialRead: [wreg-fsr0h+status,2+status,0]
  2341                           	line	194
  2342                           	
  2343  03C8                     l5632:	
  2344                           ;InterfaceV4.c: 194: unsigned char cResult = 0;
  2345  03C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2346  03C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2347  03CA  01DB               	clrf	(SerialRead@cResult)
  2348                           	line	196
  2349                           	
  2350  03CB                     l5634:	
  2351                           ;InterfaceV4.c: 196: cResult = serialBufferRX[serialTailRX];
  2352  03CB  0874               	movf	(_serialTailRX),w
  2353  03CC  3E20               	addlw	_serialBufferRX&0ffh
  2354  03CD  0084               	movwf	fsr0
  2355  03CE  1383               	bcf	status, 7	;select IRP bank0
  2356  03CF  0800               	movf	indf,w
  2357  03D0  00DA               	movwf	(??_SerialRead+0)+0
  2358  03D1  085A               	movf	(??_SerialRead+0)+0,w
  2359  03D2  00DB               	movwf	(SerialRead@cResult)
  2360                           	line	197
  2361                           	
  2362  03D3                     l5636:	
  2363                           ;InterfaceV4.c: 197: if (serialHeadRX != serialTailRX) {
  2364  03D3  0873               	movf	(_serialHeadRX),w	;volatile
  2365  03D4  0674               	xorwf	(_serialTailRX),w	;volatile
  2366  03D5  1903               	skipnz
  2367  03D6  2BD8               	goto	u3481
  2368  03D7  2BD9               	goto	u3480
  2369  03D8                     u3481:
  2370  03D8  2BE6               	goto	l5642
  2371  03D9                     u3480:
  2372                           	line	198
  2373                           	
  2374  03D9                     l5638:	
  2375                           ;InterfaceV4.c: 198: if (++serialTailRX >= 32) {
  2376  03D9  3001               	movlw	(01h)
  2377  03DA  00DA               	movwf	(??_SerialRead+0)+0
  2378  03DB  085A               	movf	(??_SerialRead+0)+0,w
  2379  03DC  07F4               	addwf	(_serialTailRX),f	;volatile
  2380  03DD  3020               	movlw	(020h)
  2381  03DE  0274               	subwf	((_serialTailRX)),w	;volatile
  2382  03DF  1C03               	skipc
  2383  03E0  2BE2               	goto	u3491
  2384  03E1  2BE3               	goto	u3490
  2385  03E2                     u3491:
  2386  03E2  2BE6               	goto	l5642
  2387  03E3                     u3490:
  2388                           	line	199
  2389                           	
  2390  03E3                     l5640:	
  2391                           ;InterfaceV4.c: 199: serialTailRX = 0;
  2392  03E3  01F4               	clrf	(_serialTailRX)	;volatile
  2393  03E4  2BE6               	goto	l5642
  2394                           	line	200
  2395                           	
  2396  03E5                     l1179:	
  2397  03E5  2BE6               	goto	l5642
  2398                           	line	201
  2399                           	
  2400  03E6                     l1178:	
  2401                           	line	203
  2402                           	
  2403  03E6                     l5642:	
  2404                           ;InterfaceV4.c: 200: }
  2405                           ;InterfaceV4.c: 201: }
  2406                           ;InterfaceV4.c: 203: return cResult;
  2407  03E6  085B               	movf	(SerialRead@cResult),w
  2408  03E7  2BE8               	goto	l1180
  2409                           	
  2410  03E8                     l5644:	
  2411                           	line	204
  2412                           	
  2413  03E8                     l1180:	
  2414  03E8  0008               	return
  2415                           	opt stack 0
  2416                           GLOBAL	__end_of_SerialRead
  2417  03E9                     	__end_of_SerialRead:
  2418 ;; =============== function _SerialRead ends ============
  2419                           
  2420                           	signat	_SerialRead,89
  2421                           	global	_SetUSART
  2422                           psect	text675,local,class=CODE,delta=2
  2423                           global __ptext675
  2424  044D                     __ptext675:
  2425                           
  2426 ;; *************** function _SetUSART *****************
  2427 ;; Defined at:
  2428 ;;		line 164 in file "Board/InterfaceV4.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;		None
  2433 ;; Return value:  Size  Location     Type
  2434 ;;		None               void
  2435 ;; Registers used:
  2436 ;;		wreg
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2442 ;;      Params:         0       0       0       0
  2443 ;;      Locals:         0       0       0       0
  2444 ;;      Temps:          0       0       0       0
  2445 ;;      Totals:         0       0       0       0
  2446 ;;Total ram usage:        0 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    2
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_setup
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           psect	text675
  2456                           	file	"Board/InterfaceV4.c"
  2457                           	line	164
  2458                           	global	__size_of_SetUSART
  2459  0011                     	__size_of_SetUSART	equ	__end_of_SetUSART-_SetUSART
  2460                           	
  2461  044D                     _SetUSART:	
  2462                           	opt	stack 4
  2463                           ; Regs used in _SetUSART: [wreg]
  2464                           	line	166
  2465                           	
  2466  044D                     l5624:	
  2467                           ;InterfaceV4.c: 166: SPEN = 1;
  2468  044D  1283               	bcf	status, 5	;RP0=0, select bank0
  2469  044E  1303               	bcf	status, 6	;RP1=0, select bank0
  2470  044F  1797               	bsf	(191/8),(191)&7
  2471                           	line	167
  2472                           ;InterfaceV4.c: 167: SYNC = 0;
  2473  0450  1216               	bcf	(180/8),(180)&7
  2474                           	line	168
  2475                           ;InterfaceV4.c: 168: TXEN = 1;
  2476  0451  1696               	bsf	(181/8),(181)&7
  2477                           	line	170
  2478                           ;InterfaceV4.c: 170: TRISC4 = 0;
  2479  0452  1683               	bsf	status, 5	;RP0=1, select bank1
  2480  0453  1303               	bcf	status, 6	;RP1=0, select bank1
  2481  0454  1207               	bcf	(1084/8)^080h,(1084)&7
  2482                           	line	172
  2483                           ;InterfaceV4.c: 172: TRISC5 = 1;
  2484  0455  1687               	bsf	(1085/8)^080h,(1085)&7
  2485                           	line	174
  2486                           ;InterfaceV4.c: 174: BRGH = 1;
  2487  0456  1283               	bcf	status, 5	;RP0=0, select bank0
  2488  0457  1303               	bcf	status, 6	;RP1=0, select bank0
  2489  0458  1516               	bsf	(178/8),(178)&7
  2490                           	line	175
  2491                           	
  2492  0459                     l5626:	
  2493                           ;InterfaceV4.c: 175: SPBRG = 25;
  2494  0459  3019               	movlw	(019h)
  2495  045A  0093               	movwf	(19)	;volatile
  2496                           	line	178
  2497                           	
  2498  045B                     l5628:	
  2499                           ;InterfaceV4.c: 178: GIE = 1;
  2500  045B  178B               	bsf	(95/8),(95)&7
  2501                           	line	179
  2502                           	
  2503  045C                     l5630:	
  2504                           ;InterfaceV4.c: 179: PEIE = 1;
  2505  045C  170B               	bsf	(94/8),(94)&7
  2506                           	line	181
  2507                           	
  2508  045D                     l1169:	
  2509  045D  0008               	return
  2510                           	opt stack 0
  2511                           GLOBAL	__end_of_SetUSART
  2512  045E                     	__end_of_SetUSART:
  2513 ;; =============== function _SetUSART ends ============
  2514                           
  2515                           	signat	_SetUSART,88
  2516                           	global	_SendString
  2517                           psect	text676,local,class=CODE,delta=2
  2518                           global __ptext676
  2519  0379                     __ptext676:
  2520                           
  2521 ;; *************** function _SendString *****************
  2522 ;; Defined at:
  2523 ;;		line 135 in file "Board/InterfaceV4.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  tcString        2    0[BANK0 ] PTR const unsigned char 
  2526 ;;		 -> STR_1(12), NumericSendString@cPara(10), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  nSendLinePos    1    3[BANK0 ] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2538 ;;      Params:         0       2       0       0
  2539 ;;      Locals:         0       1       0       0
  2540 ;;      Temps:          0       1       0       0
  2541 ;;      Totals:         0       4       0       0
  2542 ;;Total ram usage:        4 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    2
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_SendLine
  2549 ;;		_NumericSendString
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           psect	text676
  2553                           	file	"Board/InterfaceV4.c"
  2554                           	line	135
  2555                           	global	__size_of_SendString
  2556  002B                     	__size_of_SendString	equ	__end_of_SendString-_SendString
  2557                           	
  2558  0379                     _SendString:	
  2559                           	opt	stack 3
  2560                           ; Regs used in _SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2561                           	line	136
  2562                           	
  2563  0379                     l5610:	
  2564                           ;InterfaceV4.c: 136: char nSendLinePos = 0;
  2565  0379  1283               	bcf	status, 5	;RP0=0, select bank0
  2566  037A  1303               	bcf	status, 6	;RP1=0, select bank0
  2567  037B  01DD               	clrf	(SendString@nSendLinePos)
  2568                           	line	138
  2569                           ;InterfaceV4.c: 138: while (tcString[nSendLinePos] != 0x00) {
  2570  037C  2B93               	goto	l5616
  2571                           	
  2572  037D                     l1149:	
  2573                           	line	139
  2574                           ;InterfaceV4.c: 139: while (!TRMT);
  2575  037D  2B7E               	goto	l1150
  2576                           	
  2577  037E                     l1151:	
  2578                           	
  2579  037E                     l1150:	
  2580  037E  1C96               	btfss	(177/8),(177)&7
  2581  037F  2B81               	goto	u3461
  2582  0380  2B82               	goto	u3460
  2583  0381                     u3461:
  2584  0381  2B7E               	goto	l1150
  2585  0382                     u3460:
  2586  0382  2B83               	goto	l5612
  2587                           	
  2588  0383                     l1152:	
  2589                           	line	140
  2590                           	
  2591  0383                     l5612:	
  2592                           ;InterfaceV4.c: 140: TXREG = tcString[nSendLinePos];
  2593  0383  085D               	movf	(SendString@nSendLinePos),w
  2594  0384  075A               	addwf	(SendString@tcString),w
  2595  0385  0084               	movwf	fsr0
  2596  0386  085B               	movf	(SendString@tcString+1),w
  2597  0387  1803               	skipnc
  2598  0388  0A5B               	incf	(SendString@tcString+1),w
  2599  0389  00FF               	movwf	btemp+1
  2600  038A  118A  2406  118A   	fcall	stringtab
  2601  038D  0095               	movwf	(21)	;volatile
  2602                           	line	141
  2603                           	
  2604  038E                     l5614:	
  2605                           ;InterfaceV4.c: 141: nSendLinePos++;
  2606  038E  3001               	movlw	(01h)
  2607  038F  00DC               	movwf	(??_SendString+0)+0
  2608  0390  085C               	movf	(??_SendString+0)+0,w
  2609  0391  07DD               	addwf	(SendString@nSendLinePos),f
  2610  0392  2B93               	goto	l5616
  2611                           	line	142
  2612                           	
  2613  0393                     l1148:	
  2614                           	line	138
  2615                           	
  2616  0393                     l5616:	
  2617  0393  085D               	movf	(SendString@nSendLinePos),w
  2618  0394  075A               	addwf	(SendString@tcString),w
  2619  0395  0084               	movwf	fsr0
  2620  0396  085B               	movf	(SendString@tcString+1),w
  2621  0397  1803               	skipnc
  2622  0398  0A5B               	incf	(SendString@tcString+1),w
  2623  0399  00FF               	movwf	btemp+1
  2624  039A  118A  2406  118A   	fcall	stringtab
  2625  039D  3800               	iorlw	0
  2626  039E  1D03               	skipz
  2627  039F  2BA1               	goto	u3471
  2628  03A0  2BA2               	goto	u3470
  2629  03A1                     u3471:
  2630  03A1  2B7E               	goto	l1150
  2631  03A2                     u3470:
  2632  03A2  2BA3               	goto	l1154
  2633                           	
  2634  03A3                     l1153:	
  2635                           	line	143
  2636                           	
  2637  03A3                     l1154:	
  2638  03A3  0008               	return
  2639                           	opt stack 0
  2640                           GLOBAL	__end_of_SendString
  2641  03A4                     	__end_of_SendString:
  2642 ;; =============== function _SendString ends ============
  2643                           
  2644                           	signat	_SendString,4216
  2645                           	global	_GetTimesHeartBeat
  2646                           psect	text677,local,class=CODE,delta=2
  2647                           global __ptext677
  2648  0422                     __ptext677:
  2649                           
  2650 ;; *************** function _GetTimesHeartBeat *****************
  2651 ;; Defined at:
  2652 ;;		line 116 in file "Board/InterfaceV4.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  cNewHeartBea    1    2[BANK0 ] unsigned char 
  2657 ;;  cTimes          1    1[BANK0 ] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      unsigned char 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2667 ;;      Params:         0       0       0       0
  2668 ;;      Locals:         0       2       0       0
  2669 ;;      Temps:          0       1       0       0
  2670 ;;      Totals:         0       3       0       0
  2671 ;;Total ram usage:        3 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    2
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_setup
  2678 ;;		_main
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           psect	text677
  2682                           	file	"Board/InterfaceV4.c"
  2683                           	line	116
  2684                           	global	__size_of_GetTimesHeartBeat
  2685  0016                     	__size_of_GetTimesHeartBeat	equ	__end_of_GetTimesHeartBeat-_GetTimesHeartBeat
  2686                           	
  2687  0422                     _GetTimesHeartBeat:	
  2688                           	opt	stack 5
  2689                           ; Regs used in _GetTimesHeartBeat: [wreg+status,2+status,0]
  2690                           	line	118
  2691                           	
  2692  0422                     l5598:	
  2693                           ;InterfaceV4.c: 117: unsigned char cNewHeartBeat;
  2694                           ;InterfaceV4.c: 118: unsigned char cTimes = 0;
  2695  0422  1283               	bcf	status, 5	;RP0=0, select bank0
  2696  0423  1303               	bcf	status, 6	;RP1=0, select bank0
  2697  0424  01DB               	clrf	(GetTimesHeartBeat@cTimes)
  2698                           	line	120
  2699                           	
  2700  0425                     l5600:	
  2701                           ;InterfaceV4.c: 120: cNewHeartBeat = cHeartBeat;
  2702  0425  0870               	movf	(_cHeartBeat),w	;volatile
  2703  0426  00DA               	movwf	(??_GetTimesHeartBeat+0)+0
  2704  0427  085A               	movf	(??_GetTimesHeartBeat+0)+0,w
  2705  0428  00DC               	movwf	(GetTimesHeartBeat@cNewHeartBeat)
  2706                           	line	121
  2707                           	
  2708  0429                     l5602:	
  2709                           ;InterfaceV4.c: 121: cTimes = (unsigned char) ((cNewHeartBeat + 0x3F + 1 - cOldHeartBeat
                                 ) & 0x3F);
  2710  0429  0371               	decf	(_cOldHeartBeat),w
  2711  042A  3AFF               	xorlw	0ffh
  2712  042B  075C               	addwf	(GetTimesHeartBeat@cNewHeartBeat),w
  2713  042C  3E40               	addlw	040h
  2714  042D  393F               	andlw	03Fh
  2715  042E  00DA               	movwf	(??_GetTimesHeartBeat+0)+0
  2716  042F  085A               	movf	(??_GetTimesHeartBeat+0)+0,w
  2717  0430  00DB               	movwf	(GetTimesHeartBeat@cTimes)
  2718                           	line	122
  2719                           	
  2720  0431                     l5604:	
  2721                           ;InterfaceV4.c: 122: cOldHeartBeat = cNewHeartBeat;
  2722  0431  085C               	movf	(GetTimesHeartBeat@cNewHeartBeat),w
  2723  0432  00DA               	movwf	(??_GetTimesHeartBeat+0)+0
  2724  0433  085A               	movf	(??_GetTimesHeartBeat+0)+0,w
  2725  0434  00F1               	movwf	(_cOldHeartBeat)
  2726                           	line	124
  2727                           	
  2728  0435                     l5606:	
  2729                           ;InterfaceV4.c: 124: return cTimes;
  2730  0435  085B               	movf	(GetTimesHeartBeat@cTimes),w
  2731  0436  2C37               	goto	l1139
  2732                           	
  2733  0437                     l5608:	
  2734                           	line	125
  2735                           	
  2736  0437                     l1139:	
  2737  0437  0008               	return
  2738                           	opt stack 0
  2739                           GLOBAL	__end_of_GetTimesHeartBeat
  2740  0438                     	__end_of_GetTimesHeartBeat:
  2741 ;; =============== function _GetTimesHeartBeat ends ============
  2742                           
  2743                           	signat	_GetTimesHeartBeat,89
  2744                           	global	_SetUSARTReceiverEnabled
  2745                           psect	text678,local,class=CODE,delta=2
  2746                           global __ptext678
  2747  0472                     __ptext678:
  2748                           
  2749 ;; *************** function _SetUSARTReceiverEnabled *****************
  2750 ;; Defined at:
  2751 ;;		line 183 in file "Board/InterfaceV4.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;		None
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;		None
  2756 ;; Return value:  Size  Location     Type
  2757 ;;		None               void
  2758 ;; Registers used:
  2759 ;;		None
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2765 ;;      Params:         0       0       0       0
  2766 ;;      Locals:         0       0       0       0
  2767 ;;      Temps:          0       0       0       0
  2768 ;;      Totals:         0       0       0       0
  2769 ;;Total ram usage:        0 bytes
  2770 ;; Hardware stack levels used:    1
  2771 ;; Hardware stack levels required when called:    2
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_setup
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           psect	text678
  2779                           	file	"Board/InterfaceV4.c"
  2780                           	line	183
  2781                           	global	__size_of_SetUSARTReceiverEnabled
  2782  0007                     	__size_of_SetUSARTReceiverEnabled	equ	__end_of_SetUSARTReceiverEnabled-_SetUSARTReceive
                                 rEnabled
  2783                           	
  2784  0472                     _SetUSARTReceiverEnabled:	
  2785                           	opt	stack 4
  2786                           ; Regs used in _SetUSARTReceiverEnabled: []
  2787                           	line	184
  2788                           	
  2789  0472                     l5596:	
  2790                           ;InterfaceV4.c: 184: CREN = 1;
  2791  0472  1283               	bcf	status, 5	;RP0=0, select bank0
  2792  0473  1303               	bcf	status, 6	;RP1=0, select bank0
  2793  0474  1617               	bsf	(188/8),(188)&7
  2794                           	line	185
  2795                           ;InterfaceV4.c: 185: RCIE = 1;
  2796  0475  1683               	bsf	status, 5	;RP0=1, select bank1
  2797  0476  1303               	bcf	status, 6	;RP1=0, select bank1
  2798  0477  168C               	bsf	(1125/8)^080h,(1125)&7
  2799                           	line	186
  2800                           	
  2801  0478                     l1172:	
  2802  0478  0008               	return
  2803                           	opt stack 0
  2804                           GLOBAL	__end_of_SetUSARTReceiverEnabled
  2805  0479                     	__end_of_SetUSARTReceiverEnabled:
  2806 ;; =============== function _SetUSARTReceiverEnabled ends ============
  2807                           
  2808                           	signat	_SetUSARTReceiverEnabled,88
  2809                           	global	_SetSendingPWM
  2810                           psect	text679,local,class=CODE,delta=2
  2811                           global __ptext679
  2812  02C9                     __ptext679:
  2813                           
  2814 ;; *************** function _SetSendingPWM *****************
  2815 ;; Defined at:
  2816 ;;		line 7 in file "Board/InterfaceV4.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  nFlag           1    2[BANK0 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2830 ;;      Params:         0       0       0       0
  2831 ;;      Locals:         0       1       0       0
  2832 ;;      Temps:          0       2       0       0
  2833 ;;      Totals:         0       3       0       0
  2834 ;;Total ram usage:        3 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_setup
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           psect	text679
  2845                           	file	"Board/InterfaceV4.c"
  2846                           	line	7
  2847                           	global	__size_of_SetSendingPWM
  2848  0042                     	__size_of_SetSendingPWM	equ	__end_of_SetSendingPWM-_SetSendingPWM
  2849                           	
  2850  02C9                     _SetSendingPWM:	
  2851                           	opt	stack 5
  2852                           ; Regs used in _SetSendingPWM: [wreg+status,2+status,0]
  2853                           	line	9
  2854                           	
  2855  02C9                     l5584:	
  2856                           ;InterfaceV4.c: 9: unsigned char nFlag = 0;
  2857  02C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2858  02CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2859  02CB  01DC               	clrf	(SetSendingPWM@nFlag)
  2860                           	line	11
  2861                           ;InterfaceV4.c: 11: while (nPoint == 0 || nPoint > 7);
  2862  02CC  2ACE               	goto	l5586
  2863                           	
  2864  02CD                     l1090:	
  2865  02CD  2ACE               	goto	l5586
  2866                           	
  2867  02CE                     l1089:	
  2868                           	
  2869  02CE                     l5586:	
  2870  02CE  0872               	movf	(_nPoint),w
  2871  02CF  1D03               	skipz
  2872  02D0  2AD2               	goto	u3430
  2873  02D1  2ACE               	goto	l5586
  2874  02D2                     u3430:
  2875                           	
  2876  02D2                     l5588:	
  2877  02D2  3008               	movlw	(08h)
  2878  02D3  0272               	subwf	(_nPoint),w
  2879  02D4  1803               	skipnc
  2880  02D5  2AD7               	goto	u3441
  2881  02D6  2AD8               	goto	u3440
  2882  02D7                     u3441:
  2883  02D7  2ACE               	goto	l5586
  2884  02D8                     u3440:
  2885  02D8  2AD9               	goto	l5590
  2886                           	
  2887  02D9                     l1091:	
  2888                           	line	12
  2889                           	
  2890  02D9                     l5590:	
  2891                           ;InterfaceV4.c: 12: nFlag = nPoint;
  2892  02D9  0872               	movf	(_nPoint),w
  2893  02DA  1283               	bcf	status, 5	;RP0=0, select bank0
  2894  02DB  1303               	bcf	status, 6	;RP1=0, select bank0
  2895  02DC  00DA               	movwf	(??_SetSendingPWM+0)+0
  2896  02DD  085A               	movf	(??_SetSendingPWM+0)+0,w
  2897  02DE  00DC               	movwf	(SetSendingPWM@nFlag)
  2898                           	line	13
  2899                           ;InterfaceV4.c: 13: while (nFlag == nPoint);
  2900  02DF  2AE1               	goto	l5592
  2901                           	
  2902  02E0                     l1093:	
  2903  02E0  2AE1               	goto	l5592
  2904                           	
  2905  02E1                     l1092:	
  2906                           	
  2907  02E1                     l5592:	
  2908  02E1  085C               	movf	(SetSendingPWM@nFlag),w
  2909  02E2  0672               	xorwf	(_nPoint),w
  2910  02E3  1903               	skipnz
  2911  02E4  2AE6               	goto	u3451
  2912  02E5  2AE7               	goto	u3450
  2913  02E6                     u3451:
  2914  02E6  2AE1               	goto	l5592
  2915  02E7                     u3450:
  2916  02E7  2AE8               	goto	l5594
  2917                           	
  2918  02E8                     l1094:	
  2919                           	line	15
  2920                           	
  2921  02E8                     l5594:	
  2922                           ;InterfaceV4.c: 15: nSendingPWM[0] = -(nPWM[0] - 0x4F);
  2923  02E8  084A               	movf	(_nPWM),w	;volatile
  2924  02E9  3EB1               	addlw	low(0FFB1h)
  2925  02EA  00DA               	movwf	(??_SetSendingPWM+0)+0
  2926  02EB  084B               	movf	(_nPWM+1),w	;volatile
  2927  02EC  1803               	skipnc
  2928  02ED  3E01               	addlw	1
  2929  02EE  3EFF               	addlw	high(0FFB1h)
  2930  02EF  00DB               	movwf	1+(??_SetSendingPWM+0)+0
  2931  02F0  09DA               	comf	(??_SetSendingPWM+0)+0,f
  2932  02F1  09DB               	comf	(??_SetSendingPWM+0)+1,f
  2933  02F2  0ADA               	incf	(??_SetSendingPWM+0)+0,f
  2934  02F3  1903               	skipnz
  2935  02F4  0ADB               	incf	(??_SetSendingPWM+0)+1,f
  2936  02F5  085A               	movf	0+(??_SetSendingPWM+0)+0,w
  2937  02F6  00CE               	movwf	(_nSendingPWM)	;volatile
  2938  02F7  085B               	movf	1+(??_SetSendingPWM+0)+0,w
  2939  02F8  00CF               	movwf	(_nSendingPWM+1)	;volatile
  2940                           	line	16
  2941                           ;InterfaceV4.c: 16: nSendingPWM[1] = -(nPWM[1] - 0x4F);
  2942  02F9  084C               	movf	0+(_nPWM)+02h,w	;volatile
  2943  02FA  3EB1               	addlw	low(0FFB1h)
  2944  02FB  00DA               	movwf	(??_SetSendingPWM+0)+0
  2945  02FC  084D               	movf	1+(_nPWM)+02h,w	;volatile
  2946  02FD  1803               	skipnc
  2947  02FE  3E01               	addlw	1
  2948  02FF  3EFF               	addlw	high(0FFB1h)
  2949  0300  00DB               	movwf	1+(??_SetSendingPWM+0)+0
  2950  0301  09DA               	comf	(??_SetSendingPWM+0)+0,f
  2951  0302  09DB               	comf	(??_SetSendingPWM+0)+1,f
  2952  0303  0ADA               	incf	(??_SetSendingPWM+0)+0,f
  2953  0304  1903               	skipnz
  2954  0305  0ADB               	incf	(??_SetSendingPWM+0)+1,f
  2955  0306  085A               	movf	0+(??_SetSendingPWM+0)+0,w
  2956  0307  00D0               	movwf	0+(_nSendingPWM)+02h	;volatile
  2957  0308  085B               	movf	1+(??_SetSendingPWM+0)+0,w
  2958  0309  00D1               	movwf	1+(_nSendingPWM)+02h	;volatile
  2959                           	line	17
  2960                           	
  2961  030A                     l1095:	
  2962  030A  0008               	return
  2963                           	opt stack 0
  2964                           GLOBAL	__end_of_SetSendingPWM
  2965  030B                     	__end_of_SetSendingPWM:
  2966 ;; =============== function _SetSendingPWM ends ============
  2967                           
  2968                           	signat	_SetSendingPWM,88
  2969                           	global	_Init
  2970                           psect	text680,local,class=CODE,delta=2
  2971                           global __ptext680
  2972  030B                     __ptext680:
  2973                           
  2974 ;; *************** function _Init *****************
  2975 ;; Defined at:
  2976 ;;		line 6 in file "Board/BoardV4.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;		None               void
  2983 ;; Registers used:
  2984 ;;		wreg, status,2
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2990 ;;      Params:         0       0       0       0
  2991 ;;      Locals:         0       0       0       0
  2992 ;;      Temps:          0       0       0       0
  2993 ;;      Totals:         0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    2
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           psect	text680
  3004                           	file	"Board/BoardV4.c"
  3005                           	line	6
  3006                           	global	__size_of_Init
  3007  003C                     	__size_of_Init	equ	__end_of_Init-_Init
  3008                           	
  3009  030B                     _Init:	
  3010                           	opt	stack 5
  3011                           ; Regs used in _Init: [wreg+status,2]
  3012                           	line	8
  3013                           	
  3014  030B                     l5520:	
  3015                           ;BoardV4.c: 8: INTCON = 0;
  3016  030B  018B               	clrf	(11)	;volatile
  3017                           	line	9
  3018                           	
  3019  030C                     l5522:	
  3020                           ;BoardV4.c: 9: GIE = 1;
  3021  030C  178B               	bsf	(95/8),(95)&7
  3022                           	line	10
  3023                           	
  3024  030D                     l5524:	
  3025                           ;BoardV4.c: 10: PEIE = 1;
  3026  030D  170B               	bsf	(94/8),(94)&7
  3027                           	line	13
  3028                           	
  3029  030E                     l5526:	
  3030                           ;BoardV4.c: 13: PIE1 = 1;
  3031  030E  3001               	movlw	(01h)
  3032  030F  1683               	bsf	status, 5	;RP0=1, select bank1
  3033  0310  1303               	bcf	status, 6	;RP1=0, select bank1
  3034  0311  008C               	movwf	(140)^080h	;volatile
  3035                           	line	14
  3036                           	
  3037  0312                     l5528:	
  3038                           ;BoardV4.c: 14: TMR1IE = 1;
  3039  0312  140C               	bsf	(1120/8)^080h,(1120)&7
  3040                           	line	16
  3041                           	
  3042  0313                     l5530:	
  3043                           ;BoardV4.c: 16: T1CON = 0x01;
  3044  0313  3001               	movlw	(01h)
  3045  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  3046  0315  1303               	bcf	status, 6	;RP1=0, select bank0
  3047  0316  0090               	movwf	(16)	;volatile
  3048                           	line	19
  3049                           	
  3050  0317                     l5532:	
  3051                           ;BoardV4.c: 19: TMR1ON = 0;
  3052  0317  1010               	bcf	(128/8),(128)&7
  3053                           	line	22
  3054                           	
  3055  0318                     l5534:	
  3056                           ;BoardV4.c: 22: CMCON0 = 0xFF;
  3057  0318  30FF               	movlw	(0FFh)
  3058  0319  0099               	movwf	(25)	;volatile
  3059                           	line	23
  3060                           	
  3061  031A                     l5536:	
  3062                           ;BoardV4.c: 23: ANSEL = 0x00;
  3063  031A  1683               	bsf	status, 5	;RP0=1, select bank1
  3064  031B  1303               	bcf	status, 6	;RP1=0, select bank1
  3065  031C  0191               	clrf	(145)^080h	;volatile
  3066                           	line	24
  3067                           	
  3068  031D                     l5538:	
  3069                           ;BoardV4.c: 24: PORTA = 0x00;
  3070  031D  1283               	bcf	status, 5	;RP0=0, select bank0
  3071  031E  1303               	bcf	status, 6	;RP1=0, select bank0
  3072  031F  0185               	clrf	(5)	;volatile
  3073                           	line	25
  3074                           	
  3075  0320                     l5540:	
  3076                           ;BoardV4.c: 25: TRISA = 0x3F;
  3077  0320  303F               	movlw	(03Fh)
  3078  0321  1683               	bsf	status, 5	;RP0=1, select bank1
  3079  0322  1303               	bcf	status, 6	;RP1=0, select bank1
  3080  0323  0085               	movwf	(133)^080h	;volatile
  3081                           	line	26
  3082                           ;BoardV4.c: 26: PORTC = 0x00;
  3083  0324  1283               	bcf	status, 5	;RP0=0, select bank0
  3084  0325  1303               	bcf	status, 6	;RP1=0, select bank0
  3085  0326  0187               	clrf	(7)	;volatile
  3086                           	line	27
  3087                           	
  3088  0327                     l5542:	
  3089                           ;BoardV4.c: 27: TRISC = 0x3F;
  3090  0327  303F               	movlw	(03Fh)
  3091  0328  1683               	bsf	status, 5	;RP0=1, select bank1
  3092  0329  1303               	bcf	status, 6	;RP1=0, select bank1
  3093  032A  0087               	movwf	(135)^080h	;volatile
  3094                           	line	30
  3095                           	
  3096  032B                     l5544:	
  3097                           ;BoardV4.c: 30: nRAPU = 0;
  3098  032B  1381               	bcf	(1039/8)^080h,(1039)&7
  3099                           	line	31
  3100                           	
  3101  032C                     l5546:	
  3102                           ;BoardV4.c: 31: WPUA = 0b00000001;
  3103  032C  3001               	movlw	(01h)
  3104  032D  0095               	movwf	(149)^080h	;volatile
  3105                           	line	40
  3106                           	
  3107  032E                     l5548:	
  3108                           ;BoardV4.c: 40: ADCS2 = 0;
  3109  032E  131F               	bcf	(1278/8)^080h,(1278)&7
  3110                           	line	41
  3111                           	
  3112  032F                     l5550:	
  3113                           ;BoardV4.c: 41: ADCS1 = 1;
  3114  032F  169F               	bsf	(1277/8)^080h,(1277)&7
  3115                           	line	42
  3116                           	
  3117  0330                     l5552:	
  3118                           ;BoardV4.c: 42: ADCS0 = 0;
  3119  0330  121F               	bcf	(1276/8)^080h,(1276)&7
  3120                           	line	43
  3121                           	
  3122  0331                     l5554:	
  3123                           ;BoardV4.c: 43: ADON = 1;
  3124  0331  1283               	bcf	status, 5	;RP0=0, select bank0
  3125  0332  1303               	bcf	status, 6	;RP1=0, select bank0
  3126  0333  141F               	bsf	(248/8),(248)&7
  3127                           	line	46
  3128                           	
  3129  0334                     l5556:	
  3130                           ;BoardV4.c: 46: TRISC3 = 0;
  3131  0334  1683               	bsf	status, 5	;RP0=1, select bank1
  3132  0335  1303               	bcf	status, 6	;RP1=0, select bank1
  3133  0336  1187               	bcf	(1083/8)^080h,(1083)&7
  3134                           	line	47
  3135                           	
  3136  0337                     l5558:	
  3137                           ;BoardV4.c: 47: TRISC2 = 0;
  3138  0337  1107               	bcf	(1082/8)^080h,(1082)&7
  3139                           	line	48
  3140                           	
  3141  0338                     l5560:	
  3142                           ;BoardV4.c: 48: TRISC1 = 0;
  3143  0338  1087               	bcf	(1081/8)^080h,(1081)&7
  3144                           	line	49
  3145                           	
  3146  0339                     l5562:	
  3147                           ;BoardV4.c: 49: TRISC0 = 0;
  3148  0339  1007               	bcf	(1080/8)^080h,(1080)&7
  3149                           	line	50
  3150                           	
  3151  033A                     l5564:	
  3152                           ;BoardV4.c: 50: TRISA2 = 0;
  3153  033A  1105               	bcf	(1066/8)^080h,(1066)&7
  3154                           	line	51
  3155                           	
  3156  033B                     l5566:	
  3157                           ;BoardV4.c: 51: TRISA1 = 0;
  3158  033B  1085               	bcf	(1065/8)^080h,(1065)&7
  3159                           	line	52
  3160                           	
  3161  033C                     l5568:	
  3162                           ;BoardV4.c: 52: TRISA0 = 0;
  3163  033C  1005               	bcf	(1064/8)^080h,(1064)&7
  3164                           	line	54
  3165                           	
  3166  033D                     l5570:	
  3167                           ;BoardV4.c: 54: RC3 = 0;
  3168  033D  1283               	bcf	status, 5	;RP0=0, select bank0
  3169  033E  1303               	bcf	status, 6	;RP1=0, select bank0
  3170  033F  1187               	bcf	(59/8),(59)&7
  3171                           	line	55
  3172                           	
  3173  0340                     l5572:	
  3174                           ;BoardV4.c: 55: RC2 = 0;
  3175  0340  1107               	bcf	(58/8),(58)&7
  3176                           	line	56
  3177                           	
  3178  0341                     l5574:	
  3179                           ;BoardV4.c: 56: RC1 = 0;
  3180  0341  1087               	bcf	(57/8),(57)&7
  3181                           	line	57
  3182                           	
  3183  0342                     l5576:	
  3184                           ;BoardV4.c: 57: RC0 = 0;
  3185  0342  1007               	bcf	(56/8),(56)&7
  3186                           	line	58
  3187                           	
  3188  0343                     l5578:	
  3189                           ;BoardV4.c: 58: RA2 = 0;
  3190  0343  1105               	bcf	(42/8),(42)&7
  3191                           	line	59
  3192                           	
  3193  0344                     l5580:	
  3194                           ;BoardV4.c: 59: RA1 = 0;
  3195  0344  1085               	bcf	(41/8),(41)&7
  3196                           	line	60
  3197                           	
  3198  0345                     l5582:	
  3199                           ;BoardV4.c: 60: RA0 = 0;
  3200  0345  1005               	bcf	(40/8),(40)&7
  3201                           	line	61
  3202                           	
  3203  0346                     l530:	
  3204  0346  0008               	return
  3205                           	opt stack 0
  3206                           GLOBAL	__end_of_Init
  3207  0347                     	__end_of_Init:
  3208 ;; =============== function _Init ends ============
  3209                           
  3210                           	signat	_Init,88
  3211                           	global	_delay
  3212                           psect	text681,local,class=CODE,delta=2
  3213                           global __ptext681
  3214  0347                     __ptext681:
  3215                           
  3216 ;; *************** function _delay *****************
  3217 ;; Defined at:
  3218 ;;		line 19 in file "ArduPIC/ArduPIC.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  tnDelay         4    0[BANK0 ] unsigned long 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3232 ;;      Params:         0       4       0       0
  3233 ;;      Locals:         0       0       0       0
  3234 ;;      Temps:          0       4       0       0
  3235 ;;      Totals:         0       8       0       0
  3236 ;;Total ram usage:        8 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    2
  3239 ;; This function calls:
  3240 ;;		Nothing
  3241 ;; This function is called by:
  3242 ;;		_setup
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           psect	text681
  3246                           	file	"ArduPIC/ArduPIC.c"
  3247                           	line	19
  3248                           	global	__size_of_delay
  3249  0032                     	__size_of_delay	equ	__end_of_delay-_delay
  3250                           	
  3251  0347                     _delay:	
  3252                           	opt	stack 4
  3253                           ; Regs used in _delay: [wreg]
  3254                           	line	20
  3255                           	
  3256  0347                     l5514:	
  3257                           ;ArduPIC.c: 20: for (; tnDelay > 0; tnDelay--);
  3258  0347  1283               	bcf	status, 5	;RP0=0, select bank0
  3259  0348  1303               	bcf	status, 6	;RP1=0, select bank0
  3260  0349  085D               	movf	(delay@tnDelay+3),w
  3261  034A  045C               	iorwf	(delay@tnDelay+2),w
  3262  034B  045B               	iorwf	(delay@tnDelay+1),w
  3263  034C  045A               	iorwf	(delay@tnDelay),w
  3264  034D  1D03               	skipz
  3265  034E  2B50               	goto	u3401
  3266  034F  2B51               	goto	u3400
  3267  0350                     u3401:
  3268  0350  2B53               	goto	l5518
  3269  0351                     u3400:
  3270  0351  2B78               	goto	l5
  3271                           	
  3272  0352                     l5516:	
  3273  0352  2B78               	goto	l5
  3274                           	
  3275  0353                     l3:	
  3276                           	
  3277  0353                     l5518:	
  3278  0353  3001               	movlw	01h
  3279  0354  00DE               	movwf	((??_delay+0)+0)
  3280  0355  3000               	movlw	0
  3281  0356  00DF               	movwf	((??_delay+0)+0+1)
  3282  0357  3000               	movlw	0
  3283  0358  00E0               	movwf	((??_delay+0)+0+2)
  3284  0359  3000               	movlw	0
  3285  035A  00E1               	movwf	((??_delay+0)+0+3)
  3286  035B  085E               	movf	0+(??_delay+0)+0,w
  3287  035C  02DA               	subwf	(delay@tnDelay),f
  3288  035D  085F               	movf	1+(??_delay+0)+0,w
  3289  035E  1C03               	skipc
  3290  035F  0F5F               	incfsz	1+(??_delay+0)+0,w
  3291  0360  2B62               	goto	u3415
  3292  0361  2B63               	goto	u3416
  3293  0362                     u3415:
  3294  0362  02DB               	subwf	(delay@tnDelay+1),f
  3295  0363                     u3416:
  3296  0363  0860               	movf	2+(??_delay+0)+0,w
  3297  0364  1C03               	skipc
  3298  0365  0F60               	incfsz	2+(??_delay+0)+0,w
  3299  0366  2B68               	goto	u3417
  3300  0367  2B69               	goto	u3418
  3301  0368                     u3417:
  3302  0368  02DC               	subwf	(delay@tnDelay+2),f
  3303  0369                     u3418:
  3304  0369  0861               	movf	3+(??_delay+0)+0,w
  3305  036A  1C03               	skipc
  3306  036B  0F61               	incfsz	3+(??_delay+0)+0,w
  3307  036C  2B6E               	goto	u3419
  3308  036D  2B6F               	goto	u3410
  3309  036E                     u3419:
  3310  036E  02DD               	subwf	(delay@tnDelay+3),f
  3311  036F                     u3410:
  3312                           
  3313  036F  085D               	movf	(delay@tnDelay+3),w
  3314  0370  045C               	iorwf	(delay@tnDelay+2),w
  3315  0371  045B               	iorwf	(delay@tnDelay+1),w
  3316  0372  045A               	iorwf	(delay@tnDelay),w
  3317  0373  1D03               	skipz
  3318  0374  2B76               	goto	u3421
  3319  0375  2B77               	goto	u3420
  3320  0376                     u3421:
  3321  0376  2B53               	goto	l5518
  3322  0377                     u3420:
  3323  0377  2B78               	goto	l5
  3324                           	
  3325  0378                     l4:	
  3326                           	line	21
  3327                           	
  3328  0378                     l5:	
  3329  0378  0008               	return
  3330                           	opt stack 0
  3331                           GLOBAL	__end_of_delay
  3332  0379                     	__end_of_delay:
  3333 ;; =============== function _delay ends ============
  3334                           
  3335                           	signat	_delay,4216
  3336                           	global	_Interrupt
  3337                           psect	text682,local,class=CODE,delta=2
  3338                           global __ptext682
  3339  01D6                     __ptext682:
  3340                           
  3341 ;; *************** function _Interrupt *****************
  3342 ;; Defined at:
  3343 ;;		line 19 in file "Board/InterfaceV4.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;		None               void
  3350 ;; Registers used:
  3351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3357 ;;      Params:         0       0       0       0
  3358 ;;      Locals:         0       0       0       0
  3359 ;;      Temps:          5       0       0       0
  3360 ;;      Totals:         5       0       0       0
  3361 ;;Total ram usage:        5 bytes
  3362 ;; Hardware stack levels used:    1
  3363 ;; Hardware stack levels required when called:    1
  3364 ;; This function calls:
  3365 ;;		_SetUSARTReceiverDisabled
  3366 ;;		i1_SetUSARTReceiverEnabled
  3367 ;; This function is called by:
  3368 ;;		Interrupt level 1
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           psect	text682
  3372                           	file	"Board/InterfaceV4.c"
  3373                           	line	19
  3374                           	global	__size_of_Interrupt
  3375  0098                     	__size_of_Interrupt	equ	__end_of_Interrupt-_Interrupt
  3376                           	
  3377  01D6                     _Interrupt:	
  3378                           	opt	stack 3
  3379                           ; Regs used in _Interrupt: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3380                           psect	intentry,class=CODE,delta=2
  3381                           global __pintentry
  3382  0004                     __pintentry:
  3383                           global interrupt_function
  3384  0004                     interrupt_function:
  3385                           	global saved_w
  3386  007E                     	saved_w	set	btemp+0
  3387  0004  00FE               	movwf	saved_w
  3388  0005  0E03               	swapf	status,w
  3389  0006  00F6               	movwf	(??_Interrupt+1)
  3390  0007  0804               	movf	fsr0,w
  3391  0008  00F7               	movwf	(??_Interrupt+2)
  3392  0009  080A               	movf	pclath,w
  3393  000A  00F8               	movwf	(??_Interrupt+3)
  3394  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  3395  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  3396  000D  087F               	movf	btemp+1,w
  3397  000E  00F9               	movwf	(??_Interrupt+4)
  3398  000F  118A  29D6         	ljmp	_Interrupt
  3399                           psect	text682
  3400                           	line	24
  3401                           	
  3402  01D6                     i1l5212:	
  3403                           ;InterfaceV4.c: 24: if (TMR1IE & TMR1IF) {
  3404  01D6  3001               	movlw	1
  3405  01D7  1683               	bsf	status, 5	;RP0=1, select bank1
  3406  01D8  1303               	bcf	status, 6	;RP1=0, select bank1
  3407  01D9  1C0C               	btfss	(1120/8)^080h,(1120)&7
  3408  01DA  3900               	andlw	0
  3409  01DB  1283               	bcf	status, 5	;RP0=0, select bank0
  3410  01DC  1303               	bcf	status, 6	;RP1=0, select bank0
  3411  01DD  1C0C               	btfss	(96/8),(96)&7
  3412  01DE  3900               	andlw	0
  3413  01DF  3800               	iorlw	0
  3414  01E0  1903               	skipnz
  3415  01E1  29E3               	goto	u301_21
  3416  01E2  29E4               	goto	u301_20
  3417  01E3                     u301_21:
  3418  01E3  2A40               	goto	i1l5264
  3419  01E4                     u301_20:
  3420                           	line	25
  3421                           	
  3422  01E4                     i1l5214:	
  3423                           ;InterfaceV4.c: 25: TMR1IF = 0;
  3424  01E4  100C               	bcf	(96/8),(96)&7
  3425                           	line	26
  3426                           ;InterfaceV4.c: 26: TMR1ON = 0;
  3427  01E5  1010               	bcf	(128/8),(128)&7
  3428                           	line	27
  3429                           	
  3430  01E6                     i1l5216:	
  3431                           ;InterfaceV4.c: 27: if (nPoint == 0) {
  3432  01E6  08F2               	movf	(_nPoint),f
  3433  01E7  1D03               	skipz
  3434  01E8  29EA               	goto	u302_21
  3435  01E9  29EB               	goto	u302_20
  3436  01EA                     u302_21:
  3437  01EA  29FB               	goto	i1l5230
  3438  01EB                     u302_20:
  3439                           	line	28
  3440                           	
  3441  01EB                     i1l5218:	
  3442                           ;InterfaceV4.c: 28: SetUSARTReceiverDisabled();
  3443  01EB  118A  2480  118A   	fcall	_SetUSARTReceiverDisabled
  3444                           	line	29
  3445                           	
  3446  01EE                     i1l5220:	
  3447                           ;InterfaceV4.c: 29: RC2 = 1;
  3448  01EE  1283               	bcf	status, 5	;RP0=0, select bank0
  3449  01EF  1303               	bcf	status, 6	;RP1=0, select bank0
  3450  01F0  1507               	bsf	(58/8),(58)&7
  3451                           	line	30
  3452                           	
  3453  01F1                     i1l5222:	
  3454                           ;InterfaceV4.c: 30: RC1 = 1;
  3455  01F1  1487               	bsf	(57/8),(57)&7
  3456                           	line	31
  3457                           	
  3458  01F2                     i1l5224:	
  3459                           ;InterfaceV4.c: 31: TMR1H = nSendingPWM[0] >> 8;
  3460  01F2  084F               	movf	(_nSendingPWM+1),w	;volatile
  3461  01F3  008F               	movwf	(15)	;volatile
  3462                           	line	32
  3463                           	
  3464  01F4                     i1l5226:	
  3465                           ;InterfaceV4.c: 32: TMR1L = nSendingPWM[0];
  3466  01F4  084E               	movf	(_nSendingPWM),w	;volatile
  3467  01F5  008E               	movwf	(14)	;volatile
  3468                           	line	33
  3469                           	
  3470  01F6                     i1l5228:	
  3471                           ;InterfaceV4.c: 33: nPoint++;
  3472  01F6  3001               	movlw	(01h)
  3473  01F7  00F5               	movwf	(??_Interrupt+0)+0
  3474  01F8  0875               	movf	(??_Interrupt+0)+0,w
  3475  01F9  07F2               	addwf	(_nPoint),f
  3476                           	line	34
  3477                           ;InterfaceV4.c: 34: } else if (nPoint == 1) {
  3478  01FA  2A3E               	goto	i1l5262
  3479                           	
  3480  01FB                     i1l1099:	
  3481                           	
  3482  01FB                     i1l5230:	
  3483  01FB  0872               	movf	(_nPoint),w
  3484  01FC  3A01               	xorlw	01h
  3485  01FD  1D03               	skipz
  3486  01FE  2A00               	goto	u303_21
  3487  01FF  2A01               	goto	u303_20
  3488  0200                     u303_21:
  3489  0200  2A15               	goto	i1l5244
  3490  0201                     u303_20:
  3491                           	line	35
  3492                           	
  3493  0201                     i1l5232:	
  3494                           ;InterfaceV4.c: 35: RC2 = 0;
  3495  0201  1107               	bcf	(58/8),(58)&7
  3496                           	line	36
  3497                           ;InterfaceV4.c: 36: RC1 = 0;
  3498  0202  1087               	bcf	(57/8),(57)&7
  3499                           	line	38
  3500                           	
  3501  0203                     i1l5234:	
  3502                           ;InterfaceV4.c: 38: serialTailRX = serialHeadRX;
  3503  0203  0873               	movf	(_serialHeadRX),w	;volatile
  3504  0204  00F5               	movwf	(??_Interrupt+0)+0
  3505  0205  0875               	movf	(??_Interrupt+0)+0,w
  3506  0206  00F4               	movwf	(_serialTailRX)	;volatile
  3507                           	line	39
  3508                           	
  3509  0207                     i1l5236:	
  3510                           ;InterfaceV4.c: 39: SetUSARTReceiverEnabled();
  3511  0207  118A  2479  118A   	fcall	i1_SetUSARTReceiverEnabled
  3512                           	line	41
  3513                           	
  3514  020A                     i1l5238:	
  3515                           ;InterfaceV4.c: 41: TMR1H = 0xD1;
  3516  020A  30D1               	movlw	(0D1h)
  3517  020B  1283               	bcf	status, 5	;RP0=0, select bank0
  3518  020C  1303               	bcf	status, 6	;RP1=0, select bank0
  3519  020D  008F               	movwf	(15)	;volatile
  3520                           	line	42
  3521                           	
  3522  020E                     i1l5240:	
  3523                           ;InterfaceV4.c: 42: TMR1L = 0x1F;
  3524  020E  301F               	movlw	(01Fh)
  3525  020F  008E               	movwf	(14)	;volatile
  3526                           	line	43
  3527                           	
  3528  0210                     i1l5242:	
  3529                           ;InterfaceV4.c: 43: nPoint++;
  3530  0210  3001               	movlw	(01h)
  3531  0211  00F5               	movwf	(??_Interrupt+0)+0
  3532  0212  0875               	movf	(??_Interrupt+0)+0,w
  3533  0213  07F2               	addwf	(_nPoint),f
  3534                           	line	44
  3535                           ;InterfaceV4.c: 44: } else if (nPoint >= 2 && nPoint <= 5) {
  3536  0214  2A3E               	goto	i1l5262
  3537                           	
  3538  0215                     i1l1101:	
  3539                           	
  3540  0215                     i1l5244:	
  3541  0215  3002               	movlw	(02h)
  3542  0216  0272               	subwf	(_nPoint),w
  3543  0217  1C03               	skipc
  3544  0218  2A1A               	goto	u304_21
  3545  0219  2A1B               	goto	u304_20
  3546  021A                     u304_21:
  3547  021A  2A2C               	goto	i1l1103
  3548  021B                     u304_20:
  3549                           	
  3550  021B                     i1l5246:	
  3551  021B  3006               	movlw	(06h)
  3552  021C  0272               	subwf	(_nPoint),w
  3553  021D  1803               	skipnc
  3554  021E  2A20               	goto	u305_21
  3555  021F  2A21               	goto	u305_20
  3556  0220                     u305_21:
  3557  0220  2A2C               	goto	i1l1103
  3558  0221                     u305_20:
  3559                           	line	45
  3560                           	
  3561  0221                     i1l5248:	
  3562                           ;InterfaceV4.c: 45: RC2 = 0;
  3563  0221  1107               	bcf	(58/8),(58)&7
  3564                           	line	46
  3565                           ;InterfaceV4.c: 46: RC1 = 0;
  3566  0222  1087               	bcf	(57/8),(57)&7
  3567                           	line	47
  3568                           	
  3569  0223                     i1l5250:	
  3570                           ;InterfaceV4.c: 47: TMR1H = 0xD1;
  3571  0223  30D1               	movlw	(0D1h)
  3572  0224  008F               	movwf	(15)	;volatile
  3573                           	line	48
  3574                           ;InterfaceV4.c: 48: TMR1L = 0x1F;
  3575  0225  301F               	movlw	(01Fh)
  3576  0226  008E               	movwf	(14)	;volatile
  3577                           	line	49
  3578                           	
  3579  0227                     i1l5252:	
  3580                           ;InterfaceV4.c: 49: nPoint++;
  3581  0227  3001               	movlw	(01h)
  3582  0228  00F5               	movwf	(??_Interrupt+0)+0
  3583  0229  0875               	movf	(??_Interrupt+0)+0,w
  3584  022A  07F2               	addwf	(_nPoint),f
  3585                           	line	50
  3586                           ;InterfaceV4.c: 50: } else {
  3587  022B  2A3E               	goto	i1l5262
  3588                           	
  3589  022C                     i1l1103:	
  3590                           	line	51
  3591                           ;InterfaceV4.c: 51: RC2 = 0;
  3592  022C  1107               	bcf	(58/8),(58)&7
  3593                           	line	52
  3594                           ;InterfaceV4.c: 52: RC1 = 0;
  3595  022D  1087               	bcf	(57/8),(57)&7
  3596                           	line	54
  3597                           	
  3598  022E                     i1l5254:	
  3599                           ;InterfaceV4.c: 54: TMR1H = 0xE9;
  3600  022E  30E9               	movlw	(0E9h)
  3601  022F  008F               	movwf	(15)	;volatile
  3602                           	line	55
  3603                           ;InterfaceV4.c: 55: TMR1L = 0x90;
  3604  0230  3090               	movlw	(090h)
  3605  0231  008E               	movwf	(14)	;volatile
  3606                           	line	56
  3607                           	
  3608  0232                     i1l5256:	
  3609                           ;InterfaceV4.c: 56: nPoint = 0;
  3610  0232  01F2               	clrf	(_nPoint)
  3611                           	line	58
  3612                           	
  3613  0233                     i1l5258:	
  3614                           ;InterfaceV4.c: 58: cHeartBeat++;
  3615  0233  3001               	movlw	(01h)
  3616  0234  00F5               	movwf	(??_Interrupt+0)+0
  3617  0235  0875               	movf	(??_Interrupt+0)+0,w
  3618  0236  07F0               	addwf	(_cHeartBeat),f	;volatile
  3619                           	line	59
  3620                           	
  3621  0237                     i1l5260:	
  3622                           ;InterfaceV4.c: 59: cHeartBeat &= 0x3F;
  3623  0237  303F               	movlw	(03Fh)
  3624  0238  00F5               	movwf	(??_Interrupt+0)+0
  3625  0239  0875               	movf	(??_Interrupt+0)+0,w
  3626  023A  05F0               	andwf	(_cHeartBeat),f	;volatile
  3627  023B  2A3E               	goto	i1l5262
  3628                           	line	60
  3629                           	
  3630  023C                     i1l1104:	
  3631  023C  2A3E               	goto	i1l5262
  3632                           	
  3633  023D                     i1l1102:	
  3634  023D  2A3E               	goto	i1l5262
  3635                           	
  3636  023E                     i1l1100:	
  3637                           	line	61
  3638                           	
  3639  023E                     i1l5262:	
  3640                           ;InterfaceV4.c: 60: }
  3641                           ;InterfaceV4.c: 61: TMR1ON = 1;
  3642  023E  1410               	bsf	(128/8),(128)&7
  3643  023F  2A40               	goto	i1l5264
  3644                           	line	62
  3645                           	
  3646  0240                     i1l1098:	
  3647                           	line	67
  3648                           	
  3649  0240                     i1l5264:	
  3650                           ;InterfaceV4.c: 62: }
  3651                           ;InterfaceV4.c: 67: if (RCIE & RCIF) {
  3652  0240  3001               	movlw	1
  3653  0241  1683               	bsf	status, 5	;RP0=1, select bank1
  3654  0242  1303               	bcf	status, 6	;RP1=0, select bank1
  3655  0243  1E8C               	btfss	(1125/8)^080h,(1125)&7
  3656  0244  3900               	andlw	0
  3657  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  3658  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  3659  0247  1E8C               	btfss	(101/8),(101)&7
  3660  0248  3900               	andlw	0
  3661  0249  3800               	iorlw	0
  3662  024A  1903               	skipnz
  3663  024B  2A4D               	goto	u306_21
  3664  024C  2A4E               	goto	u306_20
  3665  024D                     u306_21:
  3666  024D  2A63               	goto	i1l1107
  3667  024E                     u306_20:
  3668                           	line	68
  3669                           	
  3670  024E                     i1l5266:	
  3671                           ;InterfaceV4.c: 68: serialBufferRX[serialHeadRX++] = RCREG;
  3672  024E  0814               	movf	(20),w	;volatile
  3673  024F  00F5               	movwf	(??_Interrupt+0)+0
  3674  0250  0873               	movf	(_serialHeadRX),w
  3675  0251  3E20               	addlw	_serialBufferRX&0ffh
  3676  0252  0084               	movwf	fsr0
  3677  0253  0875               	movf	(??_Interrupt+0)+0,w
  3678  0254  1383               	bcf	status, 7	;select IRP bank0
  3679  0255  0080               	movwf	indf
  3680                           	
  3681  0256                     i1l5268:	
  3682  0256  3001               	movlw	(01h)
  3683  0257  00F5               	movwf	(??_Interrupt+0)+0
  3684  0258  0875               	movf	(??_Interrupt+0)+0,w
  3685  0259  07F3               	addwf	(_serialHeadRX),f	;volatile
  3686                           	line	69
  3687                           	
  3688  025A                     i1l5270:	
  3689                           ;InterfaceV4.c: 69: if (serialHeadRX >= 32)
  3690  025A  3020               	movlw	(020h)
  3691  025B  0273               	subwf	(_serialHeadRX),w	;volatile
  3692  025C  1C03               	skipc
  3693  025D  2A5F               	goto	u307_21
  3694  025E  2A60               	goto	u307_20
  3695  025F                     u307_21:
  3696  025F  2A63               	goto	i1l1107
  3697  0260                     u307_20:
  3698                           	line	70
  3699                           	
  3700  0260                     i1l5272:	
  3701                           ;InterfaceV4.c: 70: serialHeadRX = 0;
  3702  0260  01F3               	clrf	(_serialHeadRX)	;volatile
  3703  0261  2A63               	goto	i1l1107
  3704                           	
  3705  0262                     i1l1106:	
  3706  0262  2A63               	goto	i1l1107
  3707                           	line	71
  3708                           	
  3709  0263                     i1l1105:	
  3710                           	line	72
  3711                           	
  3712  0263                     i1l1107:	
  3713  0263  0879               	movf	(??_Interrupt+4),w
  3714  0264  00FF               	movwf	btemp+1
  3715  0265  0878               	movf	(??_Interrupt+3),w
  3716  0266  008A               	movwf	pclath
  3717  0267  0877               	movf	(??_Interrupt+2),w
  3718  0268  0084               	movwf	fsr0
  3719  0269  0E76               	swapf	(??_Interrupt+1)^0FFFFFF80h,w
  3720  026A  0083               	movwf	status
  3721  026B  0EFE               	swapf	saved_w,f
  3722  026C  0E7E               	swapf	saved_w,w
  3723  026D  0009               	retfie
  3724                           	opt stack 0
  3725                           GLOBAL	__end_of_Interrupt
  3726  026E                     	__end_of_Interrupt:
  3727 ;; =============== function _Interrupt ends ============
  3728                           
  3729                           	signat	_Interrupt,88
  3730                           	global	i1_SetUSARTReceiverEnabled
  3731                           psect	text683,local,class=CODE,delta=2
  3732                           global __ptext683
  3733  0479                     __ptext683:
  3734                           
  3735 ;; *************** function i1_SetUSARTReceiverEnabled *****************
  3736 ;; Defined at:
  3737 ;;		line 183 in file "Board/InterfaceV4.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;		None
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;		None               void
  3744 ;; Registers used:
  3745 ;;		None
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3751 ;;      Params:         0       0       0       0
  3752 ;;      Locals:         0       0       0       0
  3753 ;;      Temps:          0       0       0       0
  3754 ;;      Totals:         0       0       0       0
  3755 ;;Total ram usage:        0 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_Interrupt
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           psect	text683
  3764                           	file	"Board/InterfaceV4.c"
  3765                           	line	183
  3766                           	global	__size_ofi1_SetUSARTReceiverEnabled
  3767  0007                     	__size_ofi1_SetUSARTReceiverEnabled	equ	__end_ofi1_SetUSARTReceiverEnabled-i1_SetUSARTR
                                 eceiverEnabled
  3768                           	
  3769  0479                     i1_SetUSARTReceiverEnabled:	
  3770                           	opt	stack 3
  3771                           ; Regs used in i1_SetUSARTReceiverEnabled: []
  3772                           	line	184
  3773                           	
  3774  0479                     i1l5334:	
  3775                           ;InterfaceV4.c: 184: CREN = 1;
  3776  0479  1283               	bcf	status, 5	;RP0=0, select bank0
  3777  047A  1303               	bcf	status, 6	;RP1=0, select bank0
  3778  047B  1617               	bsf	(188/8),(188)&7
  3779                           	line	185
  3780                           ;InterfaceV4.c: 185: RCIE = 1;
  3781  047C  1683               	bsf	status, 5	;RP0=1, select bank1
  3782  047D  1303               	bcf	status, 6	;RP1=0, select bank1
  3783  047E  168C               	bsf	(1125/8)^080h,(1125)&7
  3784                           	line	186
  3785                           	
  3786  047F                     i1l1172:	
  3787  047F  0008               	return
  3788                           	opt stack 0
  3789                           GLOBAL	__end_ofi1_SetUSARTReceiverEnabled
  3790  0480                     	__end_ofi1_SetUSARTReceiverEnabled:
  3791 ;; =============== function i1_SetUSARTReceiverEnabled ends ============
  3792                           
  3793                           	signat	i1_SetUSARTReceiverEnabled,88
  3794                           	global	_SetUSARTReceiverDisabled
  3795                           psect	text684,local,class=CODE,delta=2
  3796                           global __ptext684
  3797  0480                     __ptext684:
  3798                           
  3799 ;; *************** function _SetUSARTReceiverDisabled *****************
  3800 ;; Defined at:
  3801 ;;		line 188 in file "Board/InterfaceV4.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;		None
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;		None               void
  3808 ;; Registers used:
  3809 ;;		None
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3815 ;;      Params:         0       0       0       0
  3816 ;;      Locals:         0       0       0       0
  3817 ;;      Temps:          0       0       0       0
  3818 ;;      Totals:         0       0       0       0
  3819 ;;Total ram usage:        0 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_Interrupt
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           psect	text684
  3828                           	file	"Board/InterfaceV4.c"
  3829                           	line	188
  3830                           	global	__size_of_SetUSARTReceiverDisabled
  3831  0007                     	__size_of_SetUSARTReceiverDisabled	equ	__end_of_SetUSARTReceiverDisabled-_SetUSARTRecei
                                 verDisabled
  3832                           	
  3833  0480                     _SetUSARTReceiverDisabled:	
  3834                           	opt	stack 3
  3835                           ; Regs used in _SetUSARTReceiverDisabled: []
  3836                           	line	189
  3837                           	
  3838  0480                     i1l5274:	
  3839                           ;InterfaceV4.c: 189: CREN = 0;
  3840  0480  1283               	bcf	status, 5	;RP0=0, select bank0
  3841  0481  1303               	bcf	status, 6	;RP1=0, select bank0
  3842  0482  1217               	bcf	(188/8),(188)&7
  3843                           	line	190
  3844                           ;InterfaceV4.c: 190: RCIE = 0;
  3845  0483  1683               	bsf	status, 5	;RP0=1, select bank1
  3846  0484  1303               	bcf	status, 6	;RP1=0, select bank1
  3847  0485  128C               	bcf	(1125/8)^080h,(1125)&7
  3848                           	line	191
  3849                           	
  3850  0486                     i1l1175:	
  3851  0486  0008               	return
  3852                           	opt stack 0
  3853                           GLOBAL	__end_of_SetUSARTReceiverDisabled
  3854  0487                     	__end_of_SetUSARTReceiverDisabled:
  3855 ;; =============== function _SetUSARTReceiverDisabled ends ============
  3856                           
  3857                           	signat	_SetUSARTReceiverDisabled,88
  3858                           psect	text685,local,class=CODE,delta=2
  3859                           global __ptext685
  3860  0000                     __ptext685:
  3861                           	global	btemp
  3862  007E                     	btemp set 07Eh
  3863                           
  3864                           	DABS	1,126,2	;btemp
  3865                           	global	wtemp0
  3866  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jul 27 17:13:55 2015

                  evaluateCommand@c 005C                                   l3 0353  
                                 l4 0378                                   l5 0378  
                                 pc 0002              SendString@nSendLinePos 005D  
                                _RD 04E0                                  _WR 04E1  
                                fsr 0004           ??_SetUSARTReceiverEnabled 005A  
                               l530 0346                                 _GIE 005F  
                               _RA0 0028                                 _RA1 0029  
                               _RA2 002A                                 _RC0 0038  
                               _RC1 0039                                 _RC2 003A  
                               _RC3 003B                                 fsr0 0004  
                               indf 0000          ??_SetUSARTReceiverDisabled 0075  
                              l1150 037E                                l1151 037E  
                              l1152 0383                                l1160 03FE  
                              l1153 03A3                                l1161 03FE  
                              l1090 02CD                                l1154 03A3  
                              l1162 0403                                l1091 02D9  
                              l1139 0437                                l1163 0405  
                              l1092 02E1                                l1172 0478  
                              l1148 0393                                l1180 03E8  
                              l1093 02E0                                l1149 037D  
                              l1157 03F4                                l1094 02E8  
                              l1158 03F4                                l1095 030A  
                              l1183 048C                                l1159 03FB  
                              l1089 02CE                                l1169 045D  
                              l1178 03E6                                l1179 03E5  
                              l1800 0108                                l1801 0021  
                              l1810 0057                                l1802 0030  
                              l1811 0066                                l1803 0032  
                              l1820 00A4                                l1812 0068  
                              l1804 0033                                l1821 00CE  
                              l1813 0069                                l1805 0042  
                              l1814 0078                                l1806 0044  
                              l1822 0108                                l1830 03C6  
                              l1815 007A                                l1807 0045  
                              l1816 007B                                l1808 0054  
                              l1825 0469                                l1817 008A  
                              l1809 0056                                l1818 008C  
                              l1770 0129                                l1819 008D  
                              l1771 01CB                                l1756 0283  
                              l1780 015D                                l1772 0142  
                              l1828 03AB                                l1757 02AD  
                              l1829 03C6                                l1758 02C8  
                              l1790 01B3                                l1782 0161  
                              l1774 0139                                l1767 01CC  
                              l1783 01C9                                l1791 01C3  
                              l1792 01BE                                l1784 0183  
                              l1776 013D                                l1768 0112  
                              l1777 01CA                                l1793 01C6  
                              l1785 0174                                l1769 012A  
                              l1794 01D5                                l1786 01C8  
                              l1778 0166                                l1795 01D5  
                              l1787 0196                                l1788 01C7  
                              l1789 01C4                                l1798 00EE  
                              l1799 0018                                l5520 030B  
                              l5600 0425                                l5514 0347  
                              l5530 0313                                l5522 030C  
                              l5602 0429                                l5610 0379  
                              l5516 0352                                l5540 0320  
                              l5532 0317                                l5524 030D  
                              l5604 0431                                l5612 0383  
                              l5700 008D                                l5518 0353  
                              l5550 032F                                l5542 0327  
                              l5534 0318                                l5526 030E  
                              l5606 0435                                l5614 038E  
                              l5630 045C                                l5710 00C0  
                              l5702 0095                                l5560 0338  
                              l5552 0330                                l5544 032B  
                              l5536 031A                                l5528 0312  
                              l5608 0437                                l5616 0393  
                              l5624 044D                                l5640 03E3  
                              l5632 03C8                                l5704 00A3  
                              l5712 00CE                                l5720 00EE  
                              l5800 0191                                l5570 033D  
                              l5562 0339                                l5554 0331  
                              l5546 032C                                l5538 031D  
                              l5626 0459                                l5642 03E6  
                              l5634 03CB                                l5650 045E  
                              l5714 00E0                                l5706 00A4  
                              l5730 027B                                l5722 026E  
                              l5810 01AE                                l5802 0196  
                              l5580 0344                                l5572 0340  
                              l5564 033A                                l5556 0334  
                              l5548 032E                                l5628 045B  
                              l5644 03E8                                l5636 03D3  
                              l5652 0469                                l5716 00E6  
                              l5708 00BA                                l5660 0016  
                              l5732 0282                                l5740 02AD  
                              l5724 0271                                l5812 01B3  
                              l5804 019C                                l5820 01CC  
                              l5582 0345                                l5574 0341  
                              l5566 033B                                l5558 0337  
                              l5590 02D9                                l5638 03D9  
                              l5646 0487                                l5654 03EC  
                              l5718 00ED                                l5670 0033  
                              l5662 0018                                l5750 02C5  
                              l5742 02B1                                l5734 0283  
                              l5726 0274                                l5814 01B9  
                              l5806 01A2                                l5830 03BC  
                              l5822 03A4                                l5576 0342  
                              l5568 033C                                l5592 02E1  
                              l5584 02C9                                l5648 048C  
                              l5656 03FB                                l5680 0052  
                              l5672 003B                                l5664 0021  
                              l5744 02B2                                l5736 02A2  
                              l5728 0278                                l5816 01BE  
                              l5808 01A6                                l5760 0125  
                              l5752 0109                                l5824 03A7  
                              _ADFM 00FF                                l5578 0343  
                              l5594 02E8                                l5586 02CE  
                              l5658 0403                                l5690 0071  
                              l5682 0057                                l5674 0040  
                              l5666 0029                                l5746 02B5  
                              l5738 02A6                                l5818 01C1  
                              l5770 0142                                l5762 012A  
                              l5754 0112                                l5826 03AB  
                              l5588 02D2                                l5596 0472  
                              l5692 0076                                l5684 005F  
                              l5676 0045                                l5668 002E  
                              l5748 02B8                                l5780 015D  
                              l5772 0148                                l5764 0130  
                              l5756 011A                                l5828 03B6  
                              l5598 0422                                l5694 007B  
                              l5686 0064                                l5678 004D  
                              l5790 017C                                l5774 014E  
                              l5782 0166                                l5766 0136  
                              l5758 011F                                l5696 0083  
                              l5688 0069                                l5792 017D  
                              l5784 016C                                l5776 0154  
                              l5768 0139                                l5698 0088  
                              l5786 0172                                l5794 0183  
                              l5778 015A                                l5796 0189  
                              l5788 0174                                l5798 018D  
                              _ADON 00F8                                _CHS0 00FA  
                              _CHS1 00FB                                _CHS2 00FC  
                              STR_1 0416                                _BRGH 00B2  
                              _CREN 00BC                                u3400 0351  
                              u3401 0350                                u3410 036F  
                              u3420 0377                                u3500 03FA  
                              u3421 0376                                u3501 03F9  
                              u3430 02D2                                u3510 0402  
                              u3415 0362                                u3511 0401  
                              _PIE1 008C                                u3416 0363  
                              u3440 02D8                                u3520 002E  
                              u3417 0368                                u3441 02D7  
                              u3521 002D                                u3418 0369  
                              u3450 02E7                                u3530 0040  
                              u3610 0281                                u3419 036E  
                              u3451 02E6                                u3531 003F  
                              u3611 0280                                u3460 0382  
                              u3540 0052                                u3620 02AC  
                              u3700 015A                                u3461 0381  
                              u3605 00DA                                u3541 0051  
                              u3621 02AB                                u3701 0159  
                              u3470 03A2                                u3550 0064  
                              u3710 016C                                u3630 011F  
                              u3471 03A1                                u3551 0063  
                              u3711 016B                                u3631 011E  
                              u3480 03D9                                u3560 0076  
                              u3720 0172                                u3640 0125  
                              u3481 03D8                                u3561 0075  
                              u3721 0171                                u3641 0124  
                              u3490 03E3                                u3570 0088  
                              u3730 0189                                u3650 0130  
                              u3491 03E2                                u3571 0087  
                              u3731 0188                                u3651 012F  
                              _PEIE 005E                                u3580 00A2  
                              u3740 019C                                u3660 0136  
                              u3581 00A1                                u3741 019B  
                              u3661 0135                                u3590 00CD  
                              u3750 01A2                                u3670 0148  
                              u3591 00CC                                u3751 01A1  
                              u3671 0147                                u3760 01B9  
                              u3680 014E                                u3585 009E  
                              u3761 01B8                                u3681 014D  
                              u3770 01D4                                u3690 0154  
                              u3595 00C9                                u3771 01D3  
                              u3691 0153                                _RCIE 0465  
                              _RCIF 0065                                _SPEN 00BF  
                              _TRMT 00B1                                _WREN 04E2  
                              _TXEN 00B5                                _SYNC 00B4  
                              _WPUA 0095                                _Init 030B  
                              _nPWM 004A                                _main 03A4  
              evaluateCommand@cTemp 0065                                btemp 007E  
                              start 0011                               ?_Init 0075  
                             _ADCS0 04FC                               _ADCS1 04FD  
                             _ADCS2 04FE                               ?_main 0075  
                             _EEADR 009B                               _CARRY 0018  
                             _ANSEL 0091                               _T1CON 0010  
                             _RCREG 0014                               _TMR1H 000F  
                             _TMR1L 000E                               _SPBRG 0013  
                             _PORTA 0005                               _PORTC 0007  
                             _TRISA 0085                               _TRISC 0087  
                             _TXREG 0015                               _nRAPU 040F  
                             _delay 0347                               _inBuf 00A0  
                             _indRX 0056                               _read8 045E  
                  SendLine@tcString 005E                               _setup 026E  
                             pclath 000A                               status 0003  
                             wtemp0 007E                        __end_of_Init 0347  
                      __end_of_main 03C8  __size_ofi1_SetUSARTReceiverEnabled 0007  
                SetSendingPWM@nFlag 005C                              ??_Init 005A  
                  __end_of_SetUSART 045E                              ??_main 006D  
                  __end_of_SendLine 0406                              ?_delay 005A  
                            _ADCON0 001F                              ?_read8 0075  
                            _ADRESH 001E                              _ADRESL 009E  
                            _EEDATA 009A                              _EECON1 009C  
                            _EECON2 009D                              _CMCON0 0019  
                            ?_setup 0075                              i1l1100 023E  
                            i1l1101 0215                              i1l1102 023D  
                            i1l1103 022C                              i1l1104 023C  
                            i1l1105 0263                              i1l1106 0262  
                            i1l1107 0263                              i1l1172 047F  
                            i1l1175 0486                              i1l1098 0240  
                            i1l1099 01FB                              i1l5220 01EE  
                            i1l5212 01D6                              i1l5222 01F1  
                            i1l5230 01FB                              i1l5214 01E4  
                            i1l5240 020E                              i1l5232 0201  
                            i1l5224 01F2                              i1l5216 01E6  
                            i1l5250 0223                              i1l5242 0210  
                            i1l5234 0203                              i1l5226 01F4  
                            i1l5218 01EB                              i1l5260 0237  
                            i1l5252 0227                              i1l5236 0207  
                            i1l5244 0215                              i1l5228 01F6  
                            i1l5334 0479                              i1l5270 025A  
                            i1l5254 022E                              i1l5246 021B  
                            i1l5238 020A                              i1l5262 023E  
                            i1l5272 0260                              i1l5256 0232  
                            i1l5248 0221                              i1l5264 0240  
                        _SendString 0379                              i1l5274 0480  
                            i1l5266 024E                              i1l5258 0233  
                        _cHeartBeat 0070                              i1l5268 0256  
                            u301_20 01E4                              u301_21 01E3  
                            u302_20 01EB                              u302_21 01EA  
                            u303_20 0201                              u303_21 0200  
                            u304_20 021B                              u304_21 021A  
                            u305_20 0221                              _INTCON 000B  
                            u305_21 0220                              u306_20 024E  
                            u306_21 024D                              u307_20 0260  
                            u307_21 025F                              _TMR1IE 0460  
                            _TMR1IF 0060                     _SerialAvailable 0487  
                            _TMR1ON 0080                              _TRISA0 0428  
                            _TRISA1 0429                              _TRISA2 042A  
                            _TRISC0 0438                              _TRISC1 0439  
                            _TRISC2 043A                              _TRISC3 043B  
                            _TRISC4 043C                              _TRISC5 043D  
                        _SerialRead 03C8                  __size_of_Interrupt 0098  
                            _cmdMSP 0055                              _nPoint 0072  
                            _nServo 0040                              clrloop 046B  
            evaluateCommand@nEncode 0063                              saved_w 007E  
                            setup@i 0066                          _cStatePWM0 0052  
                    __pcstackCOMMON 0075                       __end_of_delay 0379  
                     __end_of_read8 046A                       __end_of_setup 02C9  
                     _nContTimesKey 0046             __end_of_SerialAvailable 048D  
                 __end_of_Interrupt 026E                             ??_delay 005E  
                           ??_read8 005A                             ??_setup 0062  
                        __pbssBANK0 0020                          __pbssBANK1 00A0  
                       ?_SendString 005A            __size_of_evaluateCommand 00F6  
                         ?_SetUSART 0075                           ?_SendLine 0075  
                       ?_SerialRead 0075                          __pmaintext 03A4  
                        __pintentry 0004              __size_of_SetSendingPWM 0042  
                __size_of_serialCom 00CD          evaluateCommand@nEncodeHigh 005F  
                    serialCom@state 0059           evaluateCommand@nEncodeLow 005D  
                        ??_SetUSART 005A                          ??_SendLine 005E  
 __size_of_SetUSARTReceiverDisabled 0007                      _serialCom$2238 0067  
                    _serialCom$2239 0069           ?_SetUSARTReceiverDisabled 0075  
          ?_SetUSARTReceiverEnabled 0075                 __size_of_SendString 002B  
                       serialCom@cc 006B                      _serialBufferRX 0020  
               __size_of_SerialRead 0021                    ?_SerialAvailable 0075  
              end_of_initialization 044A             evaluateCommand@nChannel 0061  
                     _SetSendingPWM 02C9                   __end_of_serialCom 01D6  
                 ??_evaluateCommand 005A                   _GetTimesHeartBeat 0422  
                ?_GetTimesHeartBeat 0075                 ??_GetTimesHeartBeat 005A  
                    ?_SetSendingPWM 0075     __end_of_SetUSARTReceiverEnabled 0479  
         __end_of_GetTimesHeartBeat 0438          ?i1_SetUSARTReceiverEnabled 0075  
               start_initialization 0438                        ??_SendString 005C  
                         _Interrupt 01D6                        ??_SerialRead 005A  
                 __size_of_SetUSART 0011                   __size_of_SendLine 001D  
    GetTimesHeartBeat@cNewHeartBeat 005C                  __end_of_SendString 03A4  
 __end_ofi1_SetUSARTReceiverEnabled 0480                         __pbssCOMMON 0070  
                     __pcstackBANK0 005A                     ??_SetSendingPWM 005A  
                __end_of_SerialRead 03E9    __end_of_SetUSARTReceiverDisabled 0487  
                        ?_Interrupt 0075                       _cOldHeartBeat 0071  
                       _nSendingPWM 004E          __size_of_GetTimesHeartBeat 0016  
                         __ptext670 0013                           __ptext671 03E9  
                         __ptext680 030B                           __ptext672 045E  
                         __ptext681 0347                           __ptext673 0487  
                         __ptext682 01D6                           __ptext674 03C8  
                         __ptext683 0479                           __ptext675 044D  
                         __ptext667 0000                           __ptext684 0480  
                         __ptext676 0379                           __ptext668 0109  
                         __ptext685 0000                           __ptext677 0422  
                         __ptext669 026E                           __ptext678 0472  
                         __ptext679 02C9                           __pstrings 0406  
  __size_of_SetUSARTReceiverEnabled 0007                      __size_of_delay 0032  
                    __size_of_read8 000C                      __size_of_setup 005B  
                        serialCom@c 006C                     _evaluateCommand 0013  
                      delay@tnDelay 005A                   interrupt_function 0004  
           GetTimesHeartBeat@cTimes 005B                           _serialCom 0109  
                       __stringbase 0415                     serialCom@offset 0058  
                SendString@tcString 005A                         ??_Interrupt 0075  
          _SetUSARTReceiverDisabled 0480                            _SetUSART 044D  
          __size_of_SerialAvailable 0006                            _SendLine 03E9  
                        ?_serialCom 0075         ??i1_SetUSARTReceiverEnabled 0075  
           __end_of_evaluateCommand 0109                            _checksum 0054  
                     __size_of_Init 003C                       __size_of_main 0024  
                      _serialHeadRX 0073                        _serialTailRX 0074  
                          clear_ram 046A                     _cTimesHeartBeat 0053  
           _SetUSARTReceiverEnabled 0472                            intlevel1 0000  
         i1_SetUSARTReceiverEnabled 0479                           stringcode 0410  
                       ??_serialCom 0066                   ??_SerialAvailable 005A  
                  ?_evaluateCommand 0075                            stringdir 0410  
                          stringtab 0406                   SerialRead@cResult 005B  
             __end_of_SetSendingPWM 030B                   serialCom@dataSize 0057  
